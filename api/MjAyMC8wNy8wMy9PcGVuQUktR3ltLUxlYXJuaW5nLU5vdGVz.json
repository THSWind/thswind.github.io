{"title":"OpenAI/Gym Learning Notes","date":"2020-07-03T14:59:04.000Z","date_formatted":{"ll":"Jul 3, 2020","L":"07/03/2020","MM-DD":"07-03"},"link":"2020/07/03/OpenAI-Gym-Learning-Notes","comments":true,"tags":["RL"],"updated":"2020-07-03T14:59:04.000Z","content":"<p>There are some problems in deploy openai/gym and some tips I meet when I try to implement some algorithms.</p>\n<!--block-->\n<h1 id=\"1-to-list-all-of-envs-in-gym\">1 To List All of Envs in Gym<a title=\"#1-to-list-all-of-envs-in-gym\" href=\"#1-to-list-all-of-envs-in-gym\"></a></h1>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> gym <span class=\"keyword\">import</span> envs</span><br><span class=\"line\">env_names = [spec.<span class=\"built_in\">id</span> <span class=\"keyword\">for</span> spec <span class=\"keyword\">in</span> envs.registry.<span class=\"built_in\">all</span>()] </span><br><span class=\"line\"><span class=\"keyword\">for</span> name <span class=\"keyword\">in</span> <span class=\"built_in\">sorted</span>(env_names): </span><br><span class=\"line\">\t<span class=\"built_in\">print</span>(name)</span><br></pre></td></tr></table></figure>\n<h1 id=\"2-calculate-the-similarity-between-the-two-gray-image\">2 Calculate the Similarity between the Two Gray Image<a title=\"#2-calculate-the-similarity-between-the-two-gray-image\" href=\"#2-calculate-the-similarity-between-the-two-gray-image\"></a></h1>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># import the necessary packages</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> skimage.measure <span class=\"keyword\">import</span> compare_ssim</span><br><span class=\"line\"><span class=\"keyword\">import</span> cv2</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># load the two input images</span></span><br><span class=\"line\">image1 = cv2.imread(<span class=\"string\">&quot;test.png&quot;</span>)</span><br><span class=\"line\">image2 = cv2.imread(<span class=\"string\">&quot;test2.png&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">resize_img1 = cv2.resize(image1,(<span class=\"number\">84</span>,<span class=\"number\">84</span>))</span><br><span class=\"line\">resize_img2 = cv2.resize(image2,(<span class=\"number\">84</span>,<span class=\"number\">84</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">plt.imshow(resize_img1)</span><br><span class=\"line\">plt.imshow(resize_img2)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># convert the images to grayscale</span></span><br><span class=\"line\">gray1 = cv2.cvtColor(resize_img1, cv2.COLOR_BGR2GRAY)</span><br><span class=\"line\">gray2 = cv2.cvtColor(resize_img2, cv2.COLOR_BGR2GRAY)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># compute the structural similarity index(ssim) between the two images,</span></span><br><span class=\"line\"><span class=\"comment\"># ensuring that the difference image is returned</span></span><br><span class=\"line\">(score, diff) = compare_ssim(gray1, gray2, full=<span class=\"literal\">True</span>)</span><br><span class=\"line\">diff = (diff*<span class=\"number\">255</span>).astype(<span class=\"string\">&quot;uint8&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;Structural Similarity Index:&#123;&#125;&quot;</span>.<span class=\"built_in\">format</span>(score))</span><br></pre></td></tr></table></figure>\n<h2 id=\"refer-to\">refer to<a title=\"#refer-to\" href=\"#refer-to\"></a></h2>\n<p><a href=\"https://abndistro.com/post/2019/07/07/detecting-image-differences-using-python-and-opencv/\" target=\"_blank\">https://abndistro.com/post/2019/07/07/detecting-image-differences-using-python-and-opencv/</a></p>\n","prev":{"title":"Play list Generator in Python","link":"2020/07/03/Play-list-Generator-in-Python"},"next":{"title":"Trap in Roulette Selection","link":"2020/07/01/Trap-in-Roulette-Selection-Algorithm"},"plink":"http://thswind.github.io/2020/07/03/OpenAI-Gym-Learning-Notes/","toc":[{"id":"1-to-list-all-of-envs-in-gym","title":"1 To List All of Envs in Gym","index":"1"},{"id":"2-calculate-the-similarity-between-the-two-gray-image","title":"2 Calculate the Similarity between the Two Gray Image","index":"2","children":[{"id":"refer-to","title":"refer to","index":"2.1"}]}],"reward":true,"copyright":{"author":"THSWind","link":"<a href=\"http://thswind.github.io/2020/07/03/OpenAI-Gym-Learning-Notes/\" title=\"OpenAI/Gym Learning Notes\">http://thswind.github.io/2020/07/03/OpenAI-Gym-Learning-Notes/</a>","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\\\"https://creativecommons.org/licenses/by-nc-sa/4.0/\\\" rel=\\\"external nofollow\\\" target=\\\"_blank\\\">CC BY-NC-ND 4.0</a>)"},"reading_time":"197 words in 1 min"}