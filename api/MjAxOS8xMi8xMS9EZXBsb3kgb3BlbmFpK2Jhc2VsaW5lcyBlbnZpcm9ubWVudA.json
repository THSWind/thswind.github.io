{"title":"Deploy: openai/baselines","date":"2019-12-11T03:28:59.000Z","date_formatted":{"ll":"Dec 11, 2019","L":"12/11/2019","MM-DD":"12-11"},"link":"2019/12/11/Deploy openai+baselines environment","comments":true,"tags":["RL"],"updated":"2019-12-11T03:28:59.000Z","content":"<p>踩了许多坑，现将部署深度强化学习的gym/baselines环境过程整理如下：</p>\n<ol>\n<li>\n<p>安装 anaconda3</p>\n<p>使用wget在清华软件源下载很快，使用下面命令进行安装</p>\n<p>bash [文件名]</p>\n</li>\n<li>\n<p>conda create -n py3.6 python=3.6</p>\n<p>（经尝试，python3.6较为合适）</p>\n</li>\n<li>\n<p>安装对应的tensorflow-gpu加速版本，版本查询可查看我这篇博文</p>\n<p>pip install tensorflow-gpu==1.14</p>\n<p><a href=\"https://thswind.github.io/2019/11/01/tensorflow-gpu%E5%8A%A0%E9%80%9F%E6%80%BB%E7%BB%93/\" target=\"_blank\">https://thswind.github.io/2019/11/01/tensorflow-gpu加速总结/</a></p>\n<p>参考：对openai/baselines的配置</p>\n<html>\n<style type=\"text/css\">\n.tg  {border-collapse:collapse;border-spacing:0;}\n.tg td{font-family:Arial, sans-serif;font-size:14px;padding:10px 5px;border-style:solid;border-width:1px;overflow:hidden;word-break:normal;border-color:black;}\n.tg th{font-family:Arial, sans-serif;font-size:14px;font-weight:normal;padding:10px 5px;border-style:solid;border-width:1px;overflow:hidden;word-break:normal;border-color:black;}\n.tg .tg-lboi{border-color:inherit;text-align:left;vertical-align:middle}\n</style>\n<table class=\"tg\">\n  <tr>\n    <th class=\"tg-lboi\">GPU</th>\n    <th class=\"tg-lboi\">1080ti</th>\n  </tr>\n  <tr>\n    <td class=\"tg-lboi\">cudnn</td>\n    <td class=\"tg-lboi\">7.6.3</td>\n  </tr>\n  <tr>\n    <td class=\"tg-lboi\">cuda</td>\n    <td class=\"tg-lboi\">10.0</td>\n  </tr>\n  <tr>\n    <td class=\"tg-lboi\">tensorflow-gpu</td>\n    <td class=\"tg-lboi\">1.8.0</td>\n  </tr>\n</table>\n</html>\n</li>\n<li>\n<p>添加清华软件源：</p>\n<p>cd /etc/apt/</p>\n<p>vim sources.list</p>\n<p>(可在source.list文件最后添加下面这几条语句或者全部替换)</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#默认注释了源码镜像以提高 apt update 速度，如有需要可自行取消注释</span></span><br><span class=\"line\">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial main restricted universe multiverse</span><br><span class=\"line\"><span class=\"comment\">#deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial main restricted universe multiverse</span></span><br><span class=\"line\">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-updates main restricted universe multiverse</span><br><span class=\"line\"><span class=\"comment\">#deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-updates main restricted universe multiverse</span></span><br><span class=\"line\">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-backports main restricted universe multiverse</span><br><span class=\"line\"><span class=\"comment\">#deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-backports main restricted universe multiverse</span></span><br><span class=\"line\">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-security main restricted universe multiverse</span><br><span class=\"line\"><span class=\"comment\">#deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-security main restricted universe multiverse</span></span><br><span class=\"line\"><span class=\"comment\">#预发布软件源，不建议启用</span></span><br><span class=\"line\"><span class=\"comment\">#deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-proposed main restricted universe multiverse</span></span><br><span class=\"line\"><span class=\"comment\">#deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-proposed main restricted universe multiverse</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>关于baselines这里有较好的注释<a href=\"https://stable-baselines.readthedocs.io/en/master/guide/quickstart.html\" target=\"_blank\">https://stable-baselines.readthedocs.io/en/master/guide/quickstart.html</a></p>\n</li>\n<li>\n<p>进入 openai/baselines：<a href=\"https://github.com/openai/baselines\" target=\"_blank\">https://github.com/openai/baselines</a></p>\n</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">非root用户执行：</span><br><span class=\"line\">sudo apt-get update &amp;&amp; sudo apt-get install cmake libopenmpi-dev python3-dev zlib1g-dev</span><br><span class=\"line\">root用户执行：</span><br><span class=\"line\">apt-get update &amp;&amp; apt-get install cmake libopenmpi-dev python3-dev zlib1g-dev</span><br><span class=\"line\">如果安装不成功某个包，可以尝试以下几种安装方法直到安装成功为止</span><br><span class=\"line\">method1:</span><br><span class=\"line\">apt install [package]</span><br><span class=\"line\">method2:</span><br><span class=\"line\">conda install [package]</span><br></pre></td></tr></table></figure>\n<ol start=\"7\">\n<li>\n<p>克隆baselines到本地并安装</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/openai/baselines.git</span><br><span class=\"line\"><span class=\"built_in\">cd</span> baselines</span><br><span class=\"line\">pip install -e .</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p><strong>安装单元测试</strong></p>\n<p>便于检查还缺少哪些包，再根据提示进行安装，缺什么补什么，直到没有报错</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install pytest</span><br><span class=\"line\">pytest</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>对单元测试中提示的错误进行解决</p>\n<p>error1: No module named ‘matplotlib’</p>\n<ul>\n<li>pip install matplotlib</li>\n</ul>\n<p>error2: No module named ‘pandas’</p>\n<ul>\n<li>pip install pandas</li>\n</ul>\n<p>error3: No module named ‘filelock’</p>\n<ul>\n<li>pip install filelock</li>\n</ul>\n<p>error4: No module named ‘atari_py’</p>\n<ul>\n<li>pip install gym[atari]</li>\n</ul>\n<p>error5: you can install ffmpeg via <code>brew install ffmpeg</code>… sudo apt-get install ffmpeg. On Ubuntu 14.04, however, you’ll need to install avconv with <code>sudo apt-get install libav-tools</code>.</p>\n<ul>\n<li>apt-get install ffmpeg  (若提示有包未下载成功，则重复执行几次)</li>\n<li>apt-get install libav-tools</li>\n</ul>\n<p>error6：UserWarning: An interactive session is already active. This can cause out-of-memory errors in some cases. You must explicitly call <code>InteractiveSession.close()</code> to release resources held by the other session(s).</p>\n<ul>\n<li>可选择终止该主机上运行的其他涉及tensorflow的进程</li>\n<li>或忽视该问题</li>\n</ul>\n</li>\n<li>\n<p><strong>样例测试</strong></p>\n</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python -m baselines.run --alg=deepq --<span class=\"built_in\">env</span>=PongNoFrameskip-v4 --num_timesteps=1e6</span><br></pre></td></tr></table></figure>\n<p>​\t需要保存模型可用：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python -m baselines.run --alg=ppo2 --<span class=\"built_in\">env</span>=PongNoFrameskip-v4 --num_timesteps=2e7 --save_path=~/models/pong_20M_ppo2</span><br></pre></td></tr></table></figure>\n<p>​\t需要加载模型可用：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python -m baselines.run --alg=ppo2 --<span class=\"built_in\">env</span>=PongNoFrameskip-v4 --num_timesteps=0 --load_path=~/models/pong_20M_ppo2 --play</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<ol start=\"11\">\n<li>记录和可视化学习曲线和其他训练指标</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python -m baselines.run --alg=ppo2 --<span class=\"built_in\">env</span>=PongNoFrameskip-v4 --num_timesteps=2e7 --save_path=~/models/pong_20M_ppo2 --log_path=~/logs/Pong/</span><br></pre></td></tr></table></figure>\n<ol start=\"12\">\n<li>\n<p>如何加载和显示训练数据可参考文档</p>\n<p><a href=\"https://github.com/openai/baselines/blob/master/docs/viz/viz.ipynb\" target=\"_blank\">https://github.com/openai/baselines/blob/master/docs/viz/viz.ipynb</a></p>\n</li>\n</ol>\n","prev":{"title":"Classical sentences","link":"2019/12/18/My booklist"},"next":{"title":"Bugs","link":"2019/11/30/Bugs"},"plink":"http://thswind.github.io/2019/12/11/Deploy openai+baselines environment/","reading_time":"853 words in 6 min"}