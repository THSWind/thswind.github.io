[{"title":"encrypt-test","date":"2024-02-05T14:17:45.259Z","date_formatted":{"ll":"Feb 5, 2024","L":"02/05/2024","MM-DD":"02-05"},"updated":"2024-02-05T14:17:45.259Z","content":"我加密了\n","plink":"http://thswind.github.io/2024/02/05/encrypt-test/"},{"title":"The Art of Software Testing","date":"2021-07-31T09:06:04.000Z","date_formatted":{"ll":"Jul 31, 2021","L":"07/31/2021","MM-DD":"07-31"},"updated":"2021-07-31T09:06:04.000Z","content":"The Art of software Testing\n[tocc]\nThis book is writen by Glenford J.Myers. (Second Edition)\n1 Principles\n\n\nA necessary part of a test case is a definition of the expected output or result.\nA programmer should avoid attempting to test his or her own program.\nA programming organization should not test its own programs.\nThoroughly inspect the results of each test.\nTest cases must be written for input conditions that are invalid and unexpected, as well as for those that are valid and expected.\nExamining a program to see if it does not do what it is supposed to do is only half the battle; the other half is seeing whether the program does what it is not supposed to do.\nAvoid throwaway test cases unless the the program is truly a throwaway program.\nDo not plan a testing effort under the tacit assumption that no errors will be found.\nThe probability of the existence of more errors in a section of a program is proportional to the number of errors already found in that section.\nTesting is an extremely creative and intellectually challenging task.\n\n\nThe two primary human testing methods are code inspections and walkthroughs.\n2 Code Inspections\nA code inspection is a set of procedures and error-detection techniques for group code reading.\n3 Walkthroughs\n","plink":"http://thswind.github.io/2021/07/31/The-Art-of-Software-Testing/"},{"title":"Install anaconda","date":"2021-02-23T12:51:53.000Z","date_formatted":{"ll":"Feb 23, 2021","L":"02/23/2021","MM-DD":"02-23"},"updated":"2021-02-23T12:51:53.000Z","content":"Installing anaconda and pip for an ubuntu system\n1 Installing anaconda\n1.1 Download the package of it\n1wget https://repo.anaconda.com/archive/Anaconda3-2019.07-Linux-x86_64.sh\n1.2 Installing it(default)\n1bash Anaconda3-2019.07-Linux-x86_64.sh\n1.3 Load the environment variables\n12345# if not an root usersource ~/.bashrc# if root userecho &#x27;export PATH=&quot;/root/anaconda3/bin:$PATH&quot;&#x27; &gt;&gt; ~/.bashrcsource ~/.bashrc\n2 Installing pip\n12345678# 1 update the packages of systemsudo apt-get updatesudo apt-get upgrade# 2 install pipsudo apt-get install python-pip# 3 check if it was installed successful\n","plink":"http://thswind.github.io/2021/02/23/Install anaconda/"},{"title":"Image similarity","date":"2020-12-27T14:12:50.000Z","date_formatted":{"ll":"Dec 27, 2020","L":"12/27/2020","MM-DD":"12-27"},"updated":"2020-12-27T14:12:50.000Z","content":"Histogram similarity\n123456789#gray1 = cv2.cvtColor([state[2]], cv2.COLOR_BGR2GRAY)#gray2 = cv2.cvtColor([next_state[2]], cv2.COLOR_BGR2GRAY)# test--H1 = cv2.calcHist(state[2],[1],None,[256],[0,256])H1 = cv2.normalize(H1,H1,0,1,cv2.NORM_MINMAX,-1)H2 = cv2.calcHist(next_state[2],[1],None,[256],[0,256])H2 = cv2.normalize(H2,H2,0,1,cv2.NORM_MINMAX,-1)sim = cv2.compareHist(H1, H2,0)\nCompare_ssim(famous)\n12345from skimage.measure import compare_ssim  # before version 0.16from skimage.metrics import structural_similarity as compare_ssim  # after version 0.16# pip install scikit-imagesim = compare_ssim(gray1, gray2)\n","plink":"http://thswind.github.io/2020/12/27/Image similarity/"},{"title":"cv2:ImportError: libGL.so.1","date":"2020-12-22T04:46:53.000Z","date_formatted":{"ll":"Dec 22, 2020","L":"12/22/2020","MM-DD":"12-22"},"updated":"2020-12-22T04:46:53.000Z","content":"import cv2\nImportError: libGL.so.1: cannot open shared object file: No such file or directory\n12sudo apt updatesudo apt install libgl1-mesa-glx\n","plink":"http://thswind.github.io/2020/12/22/cv2ImportError libGL.so.1/"},{"title":"python play list(2nd)","date":"2020-12-07T14:16:50.000Z","date_formatted":{"ll":"Dec 7, 2020","L":"12/07/2020","MM-DD":"12-07"},"updated":"2020-12-07T14:16:50.000Z","content":"1 To sort a list which element is tuple by index\n1sorted_by_second = sorted(data, key=lambda tup: tup[1])\nor\n1data.sort(key=lambda tup: tup[1])  # sorts in place\nFor sorting by multiple criteria, namely for instance for the second and third elements in a tuple, let\n1data = [(1,2,3),(1,2,1),(1,1,4)]\nand so define a lambda that returns a tuple that describes priority, for instance\n12sorted(data, key=lambda tup: (tup[1],tup[2]) )[(1, 1, 4), (1, 2, 1), (1, 2, 3)]\nReference: python - How to sort a list/tuple of lists/tuples by the element at a given index? - Stack Overflow\n2 Add some elements to a tuple\n12345678a = (4,5,6)b = a + (7,)print(b)# output (4,5,6,7)a = (4,5,6)b = (7,) + aprint(b)# output (7,4,5,6)\n3 Tensor/numpy/list relationships\n123456789101112# list to numpyndarray = np.array(list)# numpy to listlist = ndarray.tolist()# list to torch.Tensortensor = torch.Tensor(list)# torch.Tensor to listlist = tensor.numpy().tolist()# torch.Tensor to numpyndarray = tensor.numpy()# numpy to torch.Tensortensor = torch.from_numpy(ndarray)\nSpecially，you can’t convert a tensor on gpu to numpy directly. YOU can do like this:\n1ndarray = tensor.cpu().numpy()\n","plink":"http://thswind.github.io/2020/12/07/python play list(2nd)/"},{"title":"Difference between (Openai/Gym) Deterministic-v4 and NoFrameskip-v4","date":"2020-08-16T10:12:50.000Z","date_formatted":{"ll":"Aug 16, 2020","L":"08/16/2020","MM-DD":"08-16"},"updated":"2020-08-16T10:12:50.000Z","content":"Difference between Openai/Gym’s ‘Deterministic-v4’ and ‘NoFrameskip-v4’\nv0 &amp; v4\nv0 has repeat_action_probability of 0.25 (meaning 25% of the time the previous action will be used instead of the new action), while v4 has 0 (always follow your issued action)\n‘Deterministic’ vs ‘Frameskip’\nDeterministic: a fixed frameskip of 4, while for the env without Deterministic, frameskip is sampled from (2,5) (code here)\n","plink":"http://thswind.github.io/2020/08/16/Difference between OpenaiGym's 'Deterministic-v4' and 'NoFrameskip-v4'/"},{"title":"Data Processing","date":"2020-07-31T15:32:05.000Z","date_formatted":{"ll":"Jul 31, 2020","L":"07/31/2020","MM-DD":"07-31"},"updated":"2020-07-31T15:32:05.000Z","content":"Some tips about data processing.\n\nKeep two decimal places\n1234#Examplea=1.234b=float(&#x27;%.2f&#x27; % a)print(b)\n","plink":"http://thswind.github.io/2020/07/31/Data-Processing/"},{"title":"Something about Tensorflow","date":"2020-07-31T15:29:48.000Z","date_formatted":{"ll":"Jul 31, 2020","L":"07/31/2020","MM-DD":"07-31"},"updated":"2020-07-31T15:29:48.000Z","content":"Some solutions to some common errors about tensorflow.\n\n1 AttributeError: module ‘tensorflow’ has no attribute ‘truncated_normal’\nsolution: Just replace tf with tf.compat.v1.\n2 Error: “Keras requires TensorFlow 2.2 or higher”\n12345678# upgrade tensorflowpip install --user --upgrade tensorflow-gpu# upgrade tensorboardpip install --user --upgrade tensorboard# Downgrade Keraspip install keras==2.3.1# Downgrade tensorflow-gpupip install --user --upgrade tensorflow-gpu==1.14.0\n3 _LOCAL_DEVICES = tf.config.experimental_list_devices()\nAttributeError: ‘module’ object has no attribute ‘experimental_list_devices’\nSolution: by modify line 506\n1_LOCAL_DEVICES = tf.config.experimental_list_devices()\nto\n12devices = tf.config.list_logical_devices()_LOCAL_DEVICES = [x.name for x in devices]\n4 To see the version of Tensorflow\n1pip list | grep tensorflow\n5 ImportError: libcublas.so.10.0: cannot open shared object file: No such file or directory\n1conda install cudatoolkit=10.0.130\n6 CMake Error: Could not find CMAKE_ROOT !!!\n1hash -r\n","plink":"http://thswind.github.io/2020/07/31/Something-about-Tensorflow/"},{"title":"MultiProcessing in Python","date":"2020-07-31T13:56:58.000Z","date_formatted":{"ll":"Jul 31, 2020","L":"07/31/2020","MM-DD":"07-31"},"updated":"2020-07-31T13:56:58.000Z","content":"1 pool+starmap()\n1234567891011from multiprocessing import Poolfrom functools import partial    pre_compare = [self.memory[i][0][0,:,:,3] for i in sim_sample]pre_compare = [(gray_1, self.memory[i][0][0,:,:,3]) for i in sim_sample]pool = Pool()result = pool.starmap(compare_ssim, pre_compare)count_sim = len([x for x in result if x &gt; 0.96])#print(&#x27;result:&#x27;,result)pool.close()pool.join()\n","plink":"http://thswind.github.io/2020/07/31/MultiProcessing-in-Python/"},{"title":"Methods of Search from Genetic Algorithm","date":"2020-07-03T15:06:34.000Z","date_formatted":{"ll":"Jul 3, 2020","L":"07/03/2020","MM-DD":"07-03"},"updated":"2020-07-03T15:06:34.000Z","content":"Here are some methods of search from genetic algorithm. I think it works in reinforcement learning, especially in exploration. It gives me lots of inspiration.\n\n1 Cuckoo Search\nIn operations research, cuckoo search is an optimization algorithm developed by Xin-she Yang and Suash Deb in 2009. It was inspired by the obligate brood parasitism of some cuckoo species by laying their eggs in the nests of other host birds (of other species). Some host birds can engage direct conflict with the intruding cuckoos. For example, if a host bird discovers the eggs are not their own, it will either throw these alien eggs away or simply abandon its nest and build a new nest elsewhere. Some cuckoo species such as the New World brood-parasitic Tapera have evolved in such a way that female parasitic cuckoos are often very specialized in the mimicry in colors and pattern of the eggs of a few chosen host species.[3]Cuckoo search idealized such breeding behavior, and thus can be applied for various optimization problems.\nPseudo code\nObjective function: (f(x),) x=((x_1,x_2,…,x_d));\nGenerate an initial population of (n) host nests;\nWhile\n","plink":"http://thswind.github.io/2020/07/03/Methods-of-Search-from-Genetic-Algorithm/"},{"title":"Methods of Selection from Genetic Algorithm","date":"2020-07-03T15:06:12.000Z","date_formatted":{"ll":"Jul 3, 2020","L":"07/03/2020","MM-DD":"07-03"},"updated":"2020-07-03T15:06:12.000Z","content":"Here are some methods of selection from genetic algorithm. I think it works in reinforcement learning, especially in exploitation. It gives me lots of inspiration.\n\n1 Tournament Selection\npseudo code:\n12345choose k (the tournament size) individuals from the population at randomchoose the best individual from the tournament with probability pchoose the second best individual with probability p*(1-p)choose the third best individual with probability p*((1-p)^2)and so on\n2 Roulette Selection\nPseudo code:\n1234Calculate S = the sum of a finesses.Generate a random number between 0 and S.Starting from the top of the population, keep adding the finesses to the partial sum P, till P&lt;S.The individual for which P exceeds S is the chosen individual.\n\n3 Elitism Selection\nSometimes good candidates can be lost when cross-over or mutation results in offspring that are weaker than the parents. Often the EA will re-discover these lost improvements in a subsequent generation but there is no guarantee. To combat this we can use a feature known as elitism. Elitism involves copying a small proportion of the fittest candidates, unchanged, into the next generation. This can sometimes have a dramatic impact on performance by ensuring that the EA does not waste time re-discovering previously discarded partial solutions. Candidate solutions that are preserved unchanged through elitism remain eligible for selection as parents when breeding the remainder of the next generation.\nTip\nThe Watchmaker Framework supports elitism via the second parameter to the evolve method of an EvolutionEngine. This elite count is the number of candidates in a generation that should be copied unchanged from the previous generation, rather than created via evolution. Collectively these candidates are the elite. So for a population size of 100, setting the elite count to 5 will result in the fittest 5% of each generation being copied, without modification, into the next generation.\n4 Steady State Selection\nPseudo code:\n12345678910P &lt;- generate a population of individuals randomlywhile stopping criterion has not been met:\tparent1 &lt;- tournament_selection(P)\tparent2 &lt;- tournament_selection(P)\tchild1, child2 &lt;- with probability cross_rate crossover parent1, parent2\tchild1 &lt;- mutate child1\tchild2 &lt;- mutate child2\tbest1, best2 &lt;- get the two highest fitness individuals out of parent1, parent2, child1, child2\treplace parent1 with best1\treplace parent2 with best2\n5 Rank Selection\nRank Selection is similar to fitness-proportionate selection except that selection probability is proportional to relative fitness rather than absolute fitness. In other words, it doesn’t make any difference whether the fittest candidate is ten times fitter than the next fittest or 0.001% fitter. In both cases the selection probabilities would be the same; all that matters is the ranking relative to other individuals.\nRank selection will tend to avoid premature convergence by tempering selection pressure for large fitness differentials that occur in early generations. Conversely, by amplifying small fitness differences in later generations, selection pressure is increased compared to alternative selection strategies.\n6 Stochastic Universal Sampling\nStochastic Universal Sampling is an elaborately-named variation of roulette wheel selection. Stochastic Universal Sampling ensures that the observed selection frequencies of each individual are in line with the expected frequencies. So if we have an individual that occupies 4.5% of the wheel and we select 100 individuals, we would expect on average for that individual to be selected between four and five times. Stochastic Universal Sampling guarantees this. The individual will be selected either four times or five times, not three times, not zero times and not 100 times. Standard roulette wheel selection does not make this guarantee.\nStochastic Universal Sampling works by making a single spin of the roulette wheel. This provides a starting position and the first selected individual. The selection process then proceeds by advancing all the way around the wheel in equal sized steps, where the step size is determined by the number of individuals to be selected. So if we are selecting 30 individuals we will advance by 1/30 x 360 degrees for each selection. Note that this does not mean that every candidate on the wheel will be selected. Some weak individuals will have very thin slices of the wheel and these might be stepped over completely depending on the random starting position.\n7 Reward-based Selection\nReward-based selection is a technique used in evolutionary algorithms for selecting potentially useful solutions for recombination. The probability of being selected for an individual is proportional to the cumulative reward, obtained by the individual. The cumulative reward can be computed as a sum of the individual reward and the reward, inherited from parents.\n8 Truncation Selection\nTruncation selection is the simplest and arguably least useful selection strategy. Truncation selection simply retains the fittest x% of the population. These fittest individuals are duplicated so that the population size is maintained. For example, we might select the fittest 25% from a population of 100 individuals. In this case we would create four copies of each of the 25 candidates in order to maintain a population of 100 individuals. This is an easy selection strategy to implement but it can result in premature convergence as less fit candidates are ruthlessly culled without being given the opportunity to evolve into something better. Nevertheless, truncation selection can be an effective strategy for certain problems.\n9 Sigma Scaling Selection\nLike rank selection, Sigma Scaling attempts to moderate selection pressure over time so that it is not too strong in early generations and not too weak once the population has stabilised  and fitness differences are smaller. The Greek letter Sigma is used in statistics to denote standard deviation and that’s what it means here too. The standard deviation of the population fitness is used to scale the fitness scores so that selection pressure is relatively constant over the lifetime of the evolutionary program.\n10 Fitness-Proportionate Selection\nA better approach to selection is to give every individual a chance of being selected to breed but to make fitter candidates more likely to be chosen than weaker individuals. This is achieved by making an individual’s survival probability a function of its fitness score. Such strategies are known as fitness-proportionate selection.\n","plink":"http://thswind.github.io/2020/07/03/Methods-of-Selection-from-Genetic-Algorithm/"},{"title":"Play list Generator in Python","date":"2020-07-03T15:05:41.000Z","date_formatted":{"ll":"Jul 3, 2020","L":"07/03/2020","MM-DD":"07-03"},"updated":"2020-07-03T15:05:41.000Z","content":"We know list generator is a powerful tool, here are some tips of it.\n\n1 To Generate a Series of Random number\n1234lst = [1,3,4,7,9]res = [random.uniform(0, sum(lst)) for i in range(5)]print(res)#You&#x27;ll get five random numbers between 0 and 24\n","plink":"http://thswind.github.io/2020/07/03/Play-list-Generator-in-Python/"},{"title":"OpenAI/Gym Learning Notes","date":"2020-07-03T14:59:04.000Z","date_formatted":{"ll":"Jul 3, 2020","L":"07/03/2020","MM-DD":"07-03"},"updated":"2020-07-03T14:59:04.000Z","content":"There are some problems in deploy openai/gym and some tips I meet when I try to implement some algorithms.\n\n1 To List All of Envs in Gym\n1234from gym import envsenv_names = [spec.id for spec in envs.registry.all()] for name in sorted(env_names): \tprint(name)\n2 Calculate the Similarity between the Two Gray Image\n123456789101112131415161718192021222324# import the necessary packagesfrom skimage.measure import compare_ssimimport cv2# load the two input imagesimage1 = cv2.imread(&quot;test.png&quot;)image2 = cv2.imread(&quot;test2.png&quot;)resize_img1 = cv2.resize(image1,(84,84))resize_img2 = cv2.resize(image2,(84,84))plt.imshow(resize_img1)plt.imshow(resize_img2)# convert the images to grayscalegray1 = cv2.cvtColor(resize_img1, cv2.COLOR_BGR2GRAY)gray2 = cv2.cvtColor(resize_img2, cv2.COLOR_BGR2GRAY)# compute the structural similarity index(ssim) between the two images,# ensuring that the difference image is returned(score, diff) = compare_ssim(gray1, gray2, full=True)diff = (diff*255).astype(&quot;uint8&quot;)print(&quot;Structural Similarity Index:&#123;&#125;&quot;.format(score))\nrefer to\nhttps://abndistro.com/post/2019/07/07/detecting-image-differences-using-python-and-opencv/\n","plink":"http://thswind.github.io/2020/07/03/OpenAI-Gym-Learning-Notes/"},{"title":"Trap in Roulette Selection","date":"2020-07-01T13:47:16.000Z","date_formatted":{"ll":"Jul 1, 2020","L":"07/01/2020","MM-DD":"07-01"},"updated":"2020-07-01T13:47:16.000Z","content":"\nExample of the selection of a single individualFitness proportionate selection, also known as roulette wheel selection, is a genetic operator used in genetic algorithms for selecting potentially useful solutions for recombination.\n\nRecently, I found a trap in roulette algorithm while implementing this algorithm.\nPseudo for Roulette Selection\n\nFind a Trap\n1234567891011121314151617181920#Author: THSWindsum_G = sum(list(itertools.islice(G_x, m_length-10000, m_length)))G_sample = [random.uniform(0,sum_G) for b in range(self.batch_size)]G_sample.sort()mini_batch = [] # ad: Sum of the first n items; # num: index of G_x; count: index of batch size     ad, count = 0, 0num = m_length - 10000while(num &lt; m_length):    ad += G_x[num]    if ad &gt; G_sample[count]:        mini_batch.append(self.memory[num])        if count &lt; self.batch_size -1:            count += 1        else:             break    num += 1\nIt seems  perfect, but something happened. After many steps, there is an error occurs,  it’s info shows that the index is out of bounds.\nI will describe the trap in an abstract way.\nAssume the elements is roulette = [4, 8, 0, 0, 0, 0, 0]\n\nrequirements:\n\nTo select 3 elements (batch_size = 3)\nThe elements on the roulette wheel are [4, 8, 0, 0, 0, 0, 0]\n\nAlgorithm:\n&gt;&gt; Sum = sum([4, 8, 0, 0, 0, 0, 0])      # Sum = 12\n&gt;&gt; Sample = [random.uniform(0, Sum) for b in range(batch_size)]\n​     # Sample = [1, 6, 10]\n12345678910ad, num, count = 0, 0, 0while(num &lt; roulette_length):    ad += roulette[num]    if ad &gt; Sample[count]:        batch.append(roulette[num])        if count &lt; batch_size -1:            count += 1        else:             break    num += 1\nAfter this, you’ll found len(batch) &lt; batch_size.\nMy temporary solution:\n12if len(batch) &lt; batch_size:    batch.extend([roulette[h] for h in range(batch_size-len(batch))])\nSummary\nThe main reason for this trap is that the data is too sparse\n\n","plink":"http://thswind.github.io/2020/07/01/Trap-in-Roulette-Selection-Algorithm/"},{"title":"Some Tips and Errors in Python","date":"2020-06-21T14:55:50.000Z","date_formatted":{"ll":"Jun 21, 2020","L":"06/21/2020","MM-DD":"06-21"},"updated":"2020-06-21T14:55:50.000Z","content":"When you want to remove something from a list, perhaps iterating it is your first choice. But there are some trouble about it.\n\n1 Error While iterating a list\n12345#Examplea=[1,2,3,4,5]for i in a:    a.remove(i)print(a)\nit’s result is:\n[2, 4]\nsurprise？ that‘s because when you remove the first element of a, a’s length has changed. All of elements after the first one will move forward.\nSolution：\n12345a=[1,2,3,4,5]t=0while(t&lt;len(a)):    a.pop(t)print(a)\nit’s result is:\n[]\ndone!\n2 Permutation and combination in Python\nSometimes we need to use exhaustion, especially in permutation and combination problems. We can do like this:\n12345678#Exampleimport itertoolsstring = input(&quot;please input a string:&quot;)lst=[]for i in range(1, len(string)+1):    lst1 = [&#x27;&#x27;.join(x) for x in itertools.permutations(string, i)]    lst+=lst1print(lst)   \n3 How to Use setup.py file in Github\n12python setup.py installpython setup.py build\n4 Transform elements from a list to keys of dict\ndict.fromkeys(seq[, value])\nseq  is the name of your list.\nvalue is the elements of list.\nThis is used to create a new dict variable.\nUsage 1: Not specify value\n123456x =(&#x27;key1&#x27;, &#x27;key2&#x27;, &#x27;key3&#x27;)thisdict = dict.fromkeys(x)print(thisdict)#result&#123;&#x27;key1&#x27;:None,&#x27;key2&#x27;:None,&#x27;key3&#x27;:None&#125;\nUsage 2: Specify value\n123456seq = (&#x27;name&#x27;, &#x27;age&#x27;, &#x27;sex&#x27;)dict = dict.fromkeys(seq, 10)print (&quot;the new dict is: %s&quot; %  str(dict)).#resultthe new dict is: &#123;&#x27;age&#x27;: 10, &#x27;name&#x27;: 10, &#x27;sex&#x27;: 10&#125;\nTips (Duplicate Removal)\n1234a = [1, 2, 4, 2, 4, 5, 6, 5, 7, 8, 9, 0]b = &#123;&#125;b = b.fromkeys(a)c = list(b.keys())\n5 Transform a Image to Grayscale\n12345#Exampleimport cv2image = cv2.imread(&#x27;C:/Users/N/Desktop/Test.jpg&#x27;)   #(210,160,3)gray = cv2.cvtColor(image,cv2.COLOR_BGR2GRAY)cv2.imshow(&#x27;Gray image&#x27;,gray)  #(210,160)\n6 Use of Enums in Python\n123456#ExampleClass Lab:    Jane, Bob, Thswind = range(3)print(Lab.Jane)print(Lab.Bob)print(Lab.Thswind)\n7 Use the Interactive “_” Operator\nIn the python console, whenever we test an expression or call a function, the result dispatches to a temporary name, _ (an underscore).\n1234567#example&gt;&gt;&gt;2+13&gt;&gt;&gt;_3&gt;&gt;&gt;print _3\n8 Print all of List without Omit\n1234#Exampleimport numpy as npnp.set_printoptions(threshold=np.inf)print(&#x27;done&#x27;)\n9 Use range() to generate a series of reversed number\n1234567891011#Examplelist_name = [1,2,3,4]for i in range(len(list_name), -1, -1):    print(i)    #Result43210\n10 ternary operator\n12a, b = 1, 2maxi = a &gt; b and a or b\n11 Make a slice on a deque\n1234import itertoolsq = deque()# append.()   1,2,3,4,5,6supq = itertools.islice(q, start, end)\n12 ImportError: cannot import name ‘_validate_lengths’\n1pip install numpy==1.14\n13 To See Software’s Version\n12345pip list | grep tensorflow# orapt list | grep cudnn# orconda list | grep tensorflow\n","plink":"http://thswind.github.io/2020/06/21/Some-Tips-and-Errors-in-Python/"},{"title":"Operating csv files in Python","date":"2020-06-21T14:54:23.000Z","date_formatted":{"ll":"Jun 21, 2020","L":"06/21/2020","MM-DD":"06-21"},"updated":"2020-06-21T14:54:23.000Z","content":"Usually, I use a csv file to save some experimental data. Here are some common operation codes.\n\nI will import a package named ‘csv’. It provides some methods to operating csv file.\n1 Reading csv file in Python\n1.1 Line by line\nwe will use ‘csv.reader()’ method, it’s return is a object named ‘_csv.reader’. We can iterate it.\n123456# Exampleimport csvwith open(&#x27;progress.csv&#x27;, &#x27;r&#x27;)  as f:​    reader = csv.reader(f)​    for row in reader:​       print(row)\n1.2 Get a line\nIf you want to get a line from it, you can make a type change on reader. you can use list function to transform the ‘reader’ to a list object, then you can get a line by index.\n123456# Exampleimport csvwith open(&#x27;progress.csv&#x27;,&#x27;r&#x27;) as f:    reader = csv.reader(f)    res = list(reader)    print(res[1]) #get second line\n1.3 Get a column\nIf you want to get a column from a csv file, you can refer to case ‘Line by line’ , just to add a index.\n123456#Exampleimport csvwith open(&#x27;progress.csv&#x27;,&#x27;r&#x27;) as f:    reader = csv.reader(f)    for i in reader:        print(i[0])   #get first column\n2 Writing csv file in Python\n2.1 Line by line\nAnalogously, I need a method, this time it’s name is ‘csv.writer()’.\n12345#Exampleimport csvwith open(&#x27;progress.csv&#x27;, &#x27;w&#x27;) as f:    writer = writer(f)    writer.writerow([&#x27;first&#x27;,&#x27;second&#x27;,&#x27;third&#x27;,&#x27;fourth&#x27;])\nAttention:\nIf you need open the same file twice, you need to pay attention to authority while you open this file. you must use ‘a+’, like this:\n12345#Exampleimport csvwith open(&#x27;progress.csv&#x27;, &#x27;a+&#x27;) as f:    writer = csv.writer(f)    writer.writerow([&#x27;1&#x27;,&#x27;2&#x27;,&#x27;3&#x27;,&#x27;4&#x27;])\nOnly if you in this way to write it, your previously written content will not be overwritten.\n3 Use date as file name\nSometimes, you want to name a file to distinguish it from other files. You can make use of ‘datetime()’ package.\n123456#Examplefrom datetime import datetimefilename = datetime.now().strftime(&#x27;progress-%Y%M%D%H%M.csv&#x27;)with open (filename, &#x27;w+&#x27;) as f:    writer = csv.writer(f)    writer.writerow([&#x27;first&#x27;,&#x27;second&#x27;,&#x27;third&#x27;])\nps: ‘w+’ means you can write and read file.\nError\nIf your file path write as “./data/filename”. At the same time, the ‘data’ folder isn’t exist.\nAn error will occur, that’s because python just create current file or folder, it can’t create a parent folder. You can create a parent folder by yourself.\n","plink":"http://thswind.github.io/2020/06/21/Operating-csv-files-in-Python/"},{"title":"Dual system(Win10+Ubuntu20.04)","date":"2020-06-11T16:04:39.000Z","date_formatted":{"ll":"Jun 12, 2020","L":"06/12/2020","MM-DD":"06-12"},"updated":"2020-06-11T16:04:39.000Z","content":"Install Ubuntu20.04 system in my computer, where window10 has been installed.\nSSD(120G)+HDD(1T)\n\nConditions:\n\n\nDell optiplex3060\n\n\nSSD(120G)+HDD(1T)\n\n\nWindows10(installed)\n\n\nUEFI+GPT(New technology)\n(differences:\nboot by UEFI, your pc need a EFI partition(not /boot), while boot by legacy, you will need a /boot partition\n)\n\n\n​       If you want the computer will list boot options after you turn on it, you’d better put both window10 and ubuntu’s “boot or efi” in a same disk. My window10 is installed in ssd, so I compressed volume from the ssd(actually is C: disk), about 400MB. It will contain ubuntu’s efi partition.\nPrerequisites:\n\nUSB flash disk &gt;= 8G\nUbuntu20.04xxxxxxx.iso\nUtraISO(recommended),   the way of write(USB-ZIP+)\nA USB flash disk which contains ubuntu20.04\n\nStep by Step:\n\n\nUntick your pc’s quick start(this setting can be changed in battery option)\n\n\nCompressed volume from the ssd(actually is C: disk), about 400MB. It will contain ubuntu’s efi partition.\n\n\nRestart your computer, press F2(dell), get in the bios, and turn off the security boot(just make it disabled), at the same time, turn off legacy.(choose UEFI)\n\n\n(Important)turn off “RAID ON”, and change it to “ACHI”(bios-&gt;Sata operation).\n(ps:\n​\tBecause  “RAID ON” is default setting on a dell computer, If you not do like this, your computer may can’t recognize ssd. What’s worse, you can’t install ubuntu system and get a warning\n)\n\n\nPartition:\nIn Windows, there is C disk, D disk, E disk, accordingly, in ubuntu, there is sda1, sda2, sda3, sdb1, sdb2,…(sda is a disk, while sdb is another disk, don’t mix them up).\n\n.tg  {border-collapse:collapse;border-spacing:0;}\n.tg td{border-color:black;border-style:solid;border-width:1px;font-family:Arial, sans-serif;font-size:14px;\n  overflow:hidden;padding:10px 5px;word-break:normal;}\n.tg th{border-color:black;border-style:solid;border-width:1px;font-family:Arial, sans-serif;font-size:14px;\n  font-weight:normal;overflow:hidden;padding:10px 5px;word-break:normal;}\n.tg .tg-c3ow{border-color:inherit;text-align:center;vertical-align:top}\n.tg .tg-7btt{border-color:inherit;font-weight:bold;text-align:center;vertical-align:top}\n\n\n\n  \n    partition\n    file of type\n    size\n    priority\n    position\n  \n\n\n  \n    EFI\n    efi partition\n    400MB\n    primary\n    ssd\n  \n  \n    /\n    ext4\n    40GB\n    primary\n    hdd\n  \n  \n    /home\n    ext4\n    50GB\n    logical\n    hdd\n  \n  \n    swap\n    swap space\n    16GB\n    primary\n    hdd\n  \n\n\nFor speed the process of turn on computer, I will choose the partition of ‘efi’ as boot but default.\nwaiting…\nAfter it, if you can’t get in your window10, just reset your computer,[important] don’t choose delete everything.\n\n\n","plink":"http://thswind.github.io/2020/06/12/Dual-system-Win10-Ubuntu20-04/"},{"title":"Deploy openai/gym[breakout]","date":"2020-06-11T16:03:16.000Z","date_formatted":{"ll":"Jun 12, 2020","L":"06/12/2020","MM-DD":"06-12"},"updated":"2020-06-11T16:03:16.000Z","content":"Deploy openai/gym[Breakout]\nEnvironment:\n\nUbuntu20.04\nPython3.6\nAnaconda3\nTensorflow 1.4\npygame 1.9.3\nopencv 3.1.0\n\n…\n","plink":"http://thswind.github.io/2020/06/12/Deploy-openai-gym-breakout/"},{"title":"Hypothesis Driven Exploration for Deep Reinforcement Learning","date":"2020-03-23T06:53:13.000Z","date_formatted":{"ll":"Mar 23, 2020","L":"03/23/2020","MM-DD":"03-23"},"updated":"2020-03-23T06:53:13.000Z","content":"This paper was published in 2019. This work proposes the Hypothesis Proposal and Evaluation (HyPE) algorithm, which automatically explores based on hypotheses generated via a small set of intuitive assumptions about the behavior of objects in the physical world.\n\nThis paper first introduces the set of guiding assumptions and describes how they are utilized by the HyPE algorithm.\n","plink":"http://thswind.github.io/2020/03/23/Hypothesis-Driven-Exploration-for-Deep-Reinforcement-Learning/"},{"title":"RL: Open problems","date":"2020-03-21T04:36:18.000Z","date_formatted":{"ll":"Mar 21, 2020","L":"03/21/2020","MM-DD":"03-21"},"updated":"2020-03-21T04:36:18.000Z","content":"There is a list of open questions related to exploration in reinforcement learning.\n\nBelow is a list of open questions related to exploration in reinforcement learning.\n\nHow to determine whether an agent is doing good, intelligent exploration?\nHow can we determine when exploration is the bottleneck to efficiently solving a problem?\nHow can different exploration methods be quantitatively evaluated? What are benefits and limitations of various metrics?\nHow well do exploration methods generalize across environments? How can this generalization be measured?\nIf exploration is posed as a learning problem (e.g., meta-learning), what should the learning objective be?\nCan exploration be cast as a problem of causal inference?\nWhat insight can be gained by casting exploration as unsupervised or semi-supervised learning?\nWhat exploration techniques are most effective in environments with very constrained environments (e.g., robots with physical constraints)?\nDo hierarchical approaches to exploration (e.g., with options) improve sample efficiency?\nAre certain exploration methods better suited to domain-specific applications (e.g., education, healthcare, robotics)?\nWhat insight can be gained by bridging the gap between reinforcement learning and bandits?\nWhat does exploration mean for evolutionary algorithms?\nWhat are the benefits of Bayesian exploration (e.g., safety, information gain)?\nCan ensembles of policies and/or value functions enable faster or safer exploration?\nWhat are the tradeoffs of including diversity objectives in exploration?\nDoes safe exploration necessarily come at the cost of worse sample efficiency?\nHow can exploration be down in a continual learning environment with no human supervision (i.e., no resets, no rewards)?\nCan auxiliary exploration objectives be cast in a unified framework?\nHow can insights from intuitive physics and cognitive neuroscience improve exploration techniques?\nWhat insight can be gained by casting exploration as experimental design?\nWhat conceptual or theoretical frameworks might allow researchers to\n\nReference\n​\thttps://sites.google.com/view/erl-2019/open-problems\n","plink":"http://thswind.github.io/2020/03/21/RL-Open-problems/"},{"title":"Inside theme+MathJax","date":"2020-03-17T15:14:13.000Z","date_formatted":{"ll":"Mar 17, 2020","L":"03/17/2020","MM-DD":"03-17"},"updated":"2020-03-17T15:14:13.000Z","content":"Using MathJax plugin to deal with a problem that original Inside theme can’t render the mathmatical formula written by latex code normally.\n\nThe original Inside theme can’t render the mathmatical formula written by latex code normally. So I want to add MathJax plugin to render it.\nSomeone has developed a plugin named “hexo-filter-mathjax-ssr”. I will add it to my website.\nInstallation\n1npm install hexo-filter-mathjax-ssr --save\nIf your internet speed was poor, maybe you can refer to “Migration of Hexo+Github Pages” in the root.\nConfig\nhexo/_config.yml\nconfigure the mathjax.\ndone!\nReference\nhttps://blog.oniuo.com/post/math-jax-ssr-example#cauchys-integral-formula\n","plink":"http://thswind.github.io/2020/03/17/Inside theme+MathJax/"},{"title":"Migration of Hexo+Github Pages","date":"2020-03-10T07:30:11.000Z","date_formatted":{"ll":"Mar 10, 2020","L":"03/10/2020","MM-DD":"03-10"},"updated":"2020-03-10T07:30:11.000Z","content":"Due to the novel coronavirus epidemic situation, I can’t go back to the laboratory  to update my website. Fortunately, I backed up the website data. I want to update the website through my pc.\nHere are my implementation steps. (I will not repeat section 1 and 2, https://thswind.github.io/2020/01/14/hexo%2Bgithub pages deploy)\n1 Install node.js\n2 Install Git\n3 Install hexo\n\nOpen cmd console, switch to :\n​\tF:\\mywebsite\\blog\nAnd input this command, as below:\n1F:\\mywebsite\\blog&gt;npm install hexo-cli -g\ninitial your blog:\n1F:\\mywebsite\\blog&gt;hexo init thswind\nWarning: If your are failed, probably because of your internet speed is not good.\nSwitch to thswind, and install some dependencies：\n1F:\\mywebsite\\blog\\thswind&gt;npm install\nInstall a deployer:\n1F:\\mywebsite\\blog\\thswind&gt;npm install hexo-deployer-git --save\n\n4 Migration\n\n\ncopy package.json package-lock.json from old pc to new pc\ncopy thswind/source from old pc to thswind/source to new pc\ncopy scaffolds to new pc\ncopy themes to new pc\ncopy blog\\thswind\\_config.yml to new pc\ncopy thswind\\node_modules to new pc\n\n\nProblems\n\nAfter you finished  these steps, some error may occur because of China’s complex internet environment. How to deal with it? just follow me.\n\n\nERROR Plugin load failed: hexo-renderer-scss\nTo solve this problem, you can through this command:\n1F:\\mywebsite\\blog\\thswind&gt;npm install hexo-renderer-scss --save\nIf failed again, it means you can’t visit www.github.com normally. You can visit it indirectly through ‘mirror’ website. www.gitee.com/mirrors is a good choice.\n123 F:\\mywebsite\\blog\\thswind&gt;npm install -g mirror-config-china --registry=http://registry.npm.taobao.org F:\\mywebsite\\blog\\thswind&gt;npm install node-sass\nReference:\nhttps://www.fangr.cc/2017/09/27/hexo-workflow.html\n\n\n\nNotes:\n\n\nMaybe because of different os, there will be many warning and error information in cmd console. If you haven’t found a failed, then you can ignore it, or deal with it according to the tips.\n\n\n","plink":"http://thswind.github.io/2020/03/10/Migration-of-Hexo-Github-Pages/"},{"title":"hexo+GitHub pages deploy","date":"2020-01-14T11:45:33.000Z","date_formatted":{"ll":"Jan 14, 2020","L":"01/14/2020","MM-DD":"01-14"},"updated":"2020-01-14T11:45:33.000Z","content":"1 Preliminary\n\nWindow10\n\n2 Install Node.js\nYou can search ‘node.js’ in browser, and install a stable version.( LTS, i.e.,long term support), then download node. It’s name like this:‘node-v8.11.2-x64.msi’.\nInstall Node.js to a personal disk, (e.g, D disk), and click to ‘add to path’, click to ok.\n–testing–\nopen cmd.exe, then input ‘node -v’. If display the version of node, that means node.js is successfully installed.\n3 Sign up for GitHub\nWhen everything is ok, then  start a project.\nRepository name: your username.github.io   (important)\nmy: thswind.github.io\nTick initialize this repository with a README, then click to Create repository.\n–testing–\nCreate an ‘index.html’ in your username.github.io, and write down:\n‘&lt;h1&gt;Hello GitHub Pages&lt;/h1&gt;’\nSave and submit it, then open ‘username.github.io’ in your browser, if index.html display normally, it means everything is ok.\n4 Install git\nSearch ‘git for windows’ in your browser, download it, it’s name just like: ‘Git-2.17.0-64-bit.exe’. You can install it to the same disk that you have installed Node.js(D disk).  When you installing it, remember to click to “Use Windows’ default console window”, done.\n–testing–\nOpen cmd\nInput: git\nIf display some information about it, congratulations，you have successfully installed it.\n5 GitHub SHH setting\n\n\nOpen the git-bash.exe\n\n\nInput:\nssh-keygen -t rsa -C &quot;your email for sign up for github&quot;\n\n\nAfter enter it, the ‘MINGW64’ window will display some information just like:\nGenerating publick/private rsa key pair.\nEnter file in which to save the key(/c/Users/Administrator/.ssh/id_rsa):\nIt means you can name the file which to save the key, ignore it (recommend), just click to ‘enter’.\n\n\nAfter enter it, this window will display:\nCreated idrectory '/c/Users/Administrator/.ssh'.\nEnter passphrase (empty for no passphrase):\nIgnore it (recommend), just click to ‘enter’.\n\n\nContinue to click enter, it will display some information about RSA, it is a key for you log in github.\n\n\nIf previous steps are done successfully, then you can close this window.\n\n\nOpen github, click to your image-&gt;Settings-&gt;SSH and GPG keys-&gt;New SSH key.\ntitle:'username' (or you can name it randomly)\nOpen c:\\Users\\Adminstrator.ssh, you will find a file, named id_rsa.pub. Copy it’s contents, then paste to Key\nKey: 'id_rsa.pub'\n(tips: If you can’t find id_rsa.pub, you can choose to search ‘id_rsa.pub’ in C disk.)\n\n\n6 Install Hexo &amp; usage\nSearch ‘Hexo’ in ur browser, click to “文档|Hexo”, you can see a command for install it. I want to install it to the same disk that installed node.js(D disk).\n\n\nI create a folder and name it as ‘blog’.\n\n\nOpen cmd, and switch to D disk, then input : cd blog\n\n\nAfter you switch to blog folder, just input the command for install hexo, this process will takes lots of time.\n\n\nInstalled it.\n\n\nReturn to your browser, open ‘hexo.io/zh-cn’ page, and roll down to the bottom of this page. There will be several command.\n\n\nSwitch your cmd window,\nD:\\blog&gt;\ninput ‘hexo init username’,\nIt will display INFO Cloning hexo-starter to D:\\blog\\thswind\ncloning into ‘D:\\blog\\thswind’\n\n\nExecute the following command:\nnpm install         (install some dependency about hexo)\nhexo s -p 5555   (after execute this, you can see your website locally, through input: localhost:5555 in your browser. or ‘hexo s’)\n\n\n7 Install sublime\n\n\nSearch sublime in ur browser, you can download the latest version. You can also install it in D disk.\n\n\nDouble click sublime_text.exe, and drag the ‘thswind’ folder to the sublime window. It is very convenient.\n\n\n8 Hexo publish to GitHub\n8.1 Website setting\n\n\nOpen ‘_config.yml’(this file is in thswind not the one in themes, remember it you can avoid many problem) in sublime.\nEdit some infomation(disorder):\ndeploy:\ntype: git\nrepo: https://github.com/THSWind/thswind.github.io.git\nbranch: master\nurl: https://thswind.github.io\ntitle: THSWind\nauthor: THSWind\n\n\nIf you want to deploy your post to github, you need to install a deployer.\nD:\\blog\\thswind&gt;npm install hexo-deployer-git --save\n\n\nConfigure account information\nD:\\blog\\thswind&gt;git config --global user.email &quot;your email for sign up for github&quot; \nD:\\blog\\thswind&gt;git config --global user.name &quot;thswind&quot;\n\n\nDeploy your website\nhexo g        to generate website file\nhexo d        to deploay website\n\n\nWhen you finish step 4, there will be a new window which require you to verify the login information of GitHub account. Just do it!\n\n\n–testing–\nYou can Search ‘thswind.github.io’ in your browser. If you can visit your website normally, that means you have finished it.\n9 Choose a favorite theme\n(The default theme is ‘landscape’, you can through this chapter to change it.)\n\n\nYou can open “文档|Hexo” in your browser again, and click to ‘themes’, then choose a theme which you like.\n\n\nGit clone [The open source address of the theme]\n\n\nCopy the theme folder to ‘D:\\blog\\thswind\\themes\\[theme]’\n\n\nEdit the ‘_config.yml’(D:\\blog\\thswind_config.yml)\ntheme: [the name of theme]\n\n\nThat’s all!\n","plink":"http://thswind.github.io/2020/01/14/hexo+github pages deploy/"},{"title":"ImportError overview","date":"2019-12-28T09:27:25.000Z","date_formatted":{"ll":"Dec 28, 2019","L":"12/28/2019","MM-DD":"12-28"},"updated":"2019-12-28T09:27:25.000Z","content":"This article aim to deal with some errors, which occurs in the process of you import some package of tensorflow.\n\nImportError: cannot import name ‘tf_utils’\nSeems like it was a problem with keras 2.3.0, I installed keras 2.1.5 using pip and it works fine.\npip install keras==2.1.5\nNo module named ‘colors’\npip install colors.py\n","plink":"http://thswind.github.io/2019/12/28/ImportError-overview/"},{"title":"Ubuntu: Software source","date":"2019-12-28T08:18:58.000Z","date_formatted":{"ll":"Dec 28, 2019","L":"12/28/2019","MM-DD":"12-28"},"updated":"2019-12-28T08:18:58.000Z","content":"Including Alibaba, Tsinghua, and Ubuntu’s default software sources.\n\n阿里源\n12345deb http://mirrors.aliyun.com/ubuntu/ xenial-security main restricted universe multiversedeb http://mirrors.aliyun.com/ubuntu/ xenial main restricted universe multiversedeb http://mirrors.aliyun.com/ubuntu/ xenial-updates main restricted universe multiversedeb http://mirrors.aliyun.com/ubuntu/ xenial-proposed main restricted universe multiversedeb http://mirrors.aliyun.com/ubuntu/ xenial-backports main restricted universe multiverse\n清华源\n1234567891011121314151617181920212223#默认注释了源码镜像以提高 apt update 速度，如有需要可自行取消注释deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial main restricted universe multiverse#deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial main restricted universe multiversedeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-updates main restricted universe multiverse#deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-updates main restricted universe multiversedeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-backports main restricted universe multiverse#deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-backports main restricted universe multiversedeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-security main restricted universe multiverse#deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-security main restricted universe multiverse预发布软件源，不建议启用#deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-proposed main restricted universe multiverse#deb-src https:*//mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-proposed main restricted*\n默认软件源\n1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253# deb cdrom:[Ubuntu 16.04.2 LTS _Xenial Xerus_ - Release amd64 (20170215.2)]/ xenial main restricted # See http://help.ubuntu.com/community/UpgradeNotes for how to upgrade to# newer versions of the distribution.deb http://cn.archive.ubuntu.com/ubuntu/ xenial main restricted# deb-src http://cn.archive.ubuntu.com/ubuntu/ xenial main restricted ## Major bug fix updates produced after the final release of the## distribution.deb http://cn.archive.ubuntu.com/ubuntu/ xenial-updates main restricted# deb-src http://cn.archive.ubuntu.com/ubuntu/ xenial-updates main restricted ## N.B. software from this repository is ENTIRELY UNSUPPORTED by the Ubuntu## team. Also, please note that software in universe WILL NOT receive any## review or updates from the Ubuntu security team.deb http://cn.archive.ubuntu.com/ubuntu/ xenial universe# deb-src http://cn.archive.ubuntu.com/ubuntu/ xenial universedeb http://cn.archive.ubuntu.com/ubuntu/ xenial-updates universe# deb-src http://cn.archive.ubuntu.com/ubuntu/ xenial-updates universe ## N.B. software from this repository is ENTIRELY UNSUPPORTED by the Ubuntu ## team, and may not be under a free licence. Please satisfy yourself as to ## your rights to use the software. Also, please note that software in ## multiverse WILL NOT receive any review or updates from the Ubuntu## security team.deb http://cn.archive.ubuntu.com/ubuntu/ xenial multiverse# deb-src http://cn.archive.ubuntu.com/ubuntu/ xenial multiversedeb http://cn.archive.ubuntu.com/ubuntu/ xenial-updates multiverse# deb-src http://cn.archive.ubuntu.com/ubuntu/ xenial-updates multiverse ## N.B. software from this repository may not have been tested as## extensively as that contained in the main release, although it includes## newer versions of some applications which may provide useful features.## Also, please note that software in backports WILL NOT receive any review## or updates from the Ubuntu security team.deb http://cn.archive.ubuntu.com/ubuntu/ xenial-backports main restricted universe multiverse# deb-src http://cn.archive.ubuntu.com/ubuntu/ xenial-backports main restricted universe multiverse ## Uncomment the following two lines to add software from Canonical&#x27;s## &#x27;partner&#x27; repository.## This software is not part of Ubuntu, but is offered by Canonical and the## respective vendors as a service to Ubuntu users.# deb http://archive.canonical.com/ubuntu xenial partner# deb-src http://archive.canonical.com/ubuntu xenial partner deb http://security.ubuntu.com/ubuntu xenial-security main restricted# deb-src http://security.ubuntu.com/ubuntu xenial-security main restricteddeb http://security.ubuntu.com/ubuntu xenial-security universe# deb-src http://security.ubuntu.com/ubuntu xenial-security universedeb http://security.ubuntu.com/ubuntu xenial-security multiverse# deb-src http://security.ubuntu.com/ubuntu xenial-security multiverse# deb-src http://cn.archive.ubuntu.com/ubuntu/ xenial universe# deb-src http://cn.archive.ubuntu.com/ubuntu/ xenial universe\n","plink":"http://thswind.github.io/2019/12/28/Software source of Ubuntu/"},{"title":"Classical sentences","date":"2019-12-18T12:41:19.000Z","date_formatted":{"ll":"Dec 18, 2019","L":"12/18/2019","MM-DD":"12-18"},"updated":"2019-12-18T12:41:19.000Z","content":"1《明朝那些事儿》\n当年明月[中国]\n\n暴力也许解决不了问题，但是可以解决你。\n能改的，叫做缺点；不能改的，叫做弱点。\n张牙舞爪的人，往往是脆弱的。因为真正强大的人，是自信的，自信就会温和，温和就会坚定。\n所谓道德与公理，只有在实力相等的情况下，才能拿出来讨论。\n事可以做绝，话不能说绝。\n懂得暴力的人是强壮的，懂得克制暴力的人是强大的。\n悲剧的开端，往往也是荣耀的起点。\n你还很年轻，将来你会遇到很多人，经历很多事，得到很多，也会失去很多，但无论如何，有两样东西，你绝不能丢弃，一个叫良心，一个叫理想。\n有时候，屈辱地活着，比悲壮地死去更需要勇气。\n从历史中我们可以知道，宽容从来都不是软弱。\n不要以为渺小的，就没有力量；不要以为卑微的，就没有尊严。\n因为你还活着，活着，就要继续前进。\n不知死而死，是谓无知；知死而死，是谓无谓。\n其实在这个世界上，只要你敢忽悠，什么奇迹都是可能发生的。\n得到了权力，似乎就得到了一切，但其实很多人并不明白，在权力的游戏中，你没有休息的机会，一旦参加进来，就必须一直玩下去，直到你失败或是死亡。\n外交，是指处理国与国之间关系的方法，但它还有另外一个通俗的解释—用最礼貌的方式，说出最肮脏的话。\n他只有两样不会，这也不会，那也不会。\n除了好事，什么都干；除了脸，什么都要。\n政治高手就如同江湖大侠，想要金盆洗手一走了之，那是很难的。\n一个人可以影响多数人于暂时，也可以影响少数人于永远，但无法影响多数人于永远。\n纯粹和执着，也是有区别的。所谓执着，就是不见棺材不掉泪，而纯粹，是见了棺材，也不掉泪。\n传说这个世界上存在着一种神奇的东西，它无影无形，却又无处不在，轻若无物，却又重如泰山，如果能够获知这一样东西，就能够了解这个世界上的所有的奥秘，看透所有伪装，通晓所有知识，天下万物皆可归于掌握！\n在清除敌人首脑之前，必须先扫除一切外围和帮手，这就是中华民族的传统智慧，所谓掺沙子、挖墙脚是也。\n历史证明，落水狗如果不打，就会变成恶狼。\n牺牲尊严是不够的，要想在这场残酷的游戏里笑到最后，还必须背离原则，因为眼前的敌手，是一个不讲原则的人。而要战胜一个无原则的对手，唯一的方法就是放弃所有的原则。\n\n2《卑鄙的圣人曹操》\n王晓磊[中国]\n\n\n何为“霸王之兵”？\n“风林火山，悬权而动，这就是洋洋《孙子》一书最重要的主旨，孟德好眼力。”桥玄忽然站了起来，踱了几步又道，“我也看了半辈子兵法，只有一事未曾参透，何为‘霸王之兵’呢？”\n曹操这会儿真是彻底放开了手脚，朗声道：“霸者，不结成天下诸侯之权也。绝天下之交，夺天下之权，故己威得伸而自私！”他说完这番话，连自己都吓了一跳，这等言语离仁义礼教似乎太远，也忒张狂跋扈了。\n\n\n枪杆子里出政权\n场景1-我算看明白了，手里攥着兵，腰杆子就硬。那帮子家伙说是官，其实跟匪也差不多，强占民田、勒索钱粮、结连土豪，杀人就跟碾死臭虫似的。”楼圭侃侃而谈。\n场景2-曹操将宝剑还鞘，不禁怅然道：“本初兄，符节印绶管天下的日子算是到头了，从今以后恐怕要靠手里的刀剑说话了……”\n\n\n3《睡眠革命》\n尼克·利特尔黑尔斯 [英国]\n\n固定时间起床比固定时间上床更加重要。\n90分钟为一个睡眠周期，看自己是需要几个周期的人，不是每个人都需要睡上八小时。\n两到三点是睡眠高峰期，高效期，尽量不要错过。\n保持口腔湿润，但睡前不要喝太多水。\n\n4《被讨厌的勇气》\n岸见一郎[日本]\n一个人想要获得幸福，就要实现自我接纳，他者信赖，他者贡献。\n5《坏蛋是怎样练成的》\n六道[中国]，网络小说\n\n如果当一个人老了的时候，发现自己一生平平淡淡没有任何好回忆好令自己感动的事，那他的人生注定是失败的。世界上有太多的人一生都是这样的碌碌无为。平平淡淡，如果做坏蛋可以改变这一点的话，那好，我去做，如果我做到了，那我的人生将注定比普通人精彩许多，也刺激许多。\n狼就是不畏惧生死的战士。为了生存，它们会主动攻击比自己强大数倍的敌人，哪怕自己战死，它也要为其他的同类创造出机会。在物竞天择的法则中，狼是可敬的，但也是被人们所不理解、厌恶的。\n流星，因为短暂而美丽，划过黑寂的夜空，释放出那一闪而逝的光芒，虽然微弱，但却没有人能无视它的存在。人生如同流星，充满了精彩与传奇，如同一支美丽的传说，究竟是否会象流星那样短暂，别人决定不了，上天也决定不了，只有自己来掌握。如果愿意，流星也可以变成永恒。\n不要做你想做的事，你一定不是我的对手。\n我非英雄，广目无双，我本坏蛋，无限嚣张。\n\n6《挪威的森林》\n村上春树[日本]\n\n即使你最心爱的人，心中都会有一片你无法到达的森林\n记忆这玩意儿真是不可思议，当我身临其境时，我是一点也不去留意那风景。\n没有人喜欢孤独，只是不想勉强交朋友，要真那么做的话，恐怕只会失望而已。\n我渐渐能意会到，深刻并不等于接近事实。\n当周围一团漆黑的时候,只能静等眼睛习惯黑暗\n&quot;喜欢我喜欢到什么程度?&quot;绿子问.“整个世界森林里的老虎全都融化成黄油.”\n火红的晚霞让人置身在火红的绚烂之中， 置身在遥远的童年那天真烂漫的憧憬之中， 置身在那从来未曾实现也永远不可能实现的憧憬之中。\n\n7《人性的弱点》\n\nAll men are liable to error;and most men are,in many points,by passion or interest,under temptation to it.(John Locke,British Philosopher\nCharacter is what you are in the dark.(D.L Moody.USA churchman)\nDespite all the life danger,with one selfless act from one common person,someone is saved,A hero is made.(Norman Stephens,USA writer)\nDistrust can be contagious.But,so can trust.(Robbins Stacia,British writer)\nFame is the chastisement of meit and the punishment of talent.(Nicolas Chamfort,French writer)\nGod was constructed out of mankind’s need for hope,for purpose,for meaning:an invisible protector and conscientious father.(Howards Mel.USA writer)\n\n8《鬼谷子》\n\n摩而恐之，高而动之，微而证之，符而应之，拥而塞之，乱而惑之，是谓计谋。\n无以人之所不欲而强之于人，无以人之不所知而教之于人。人之有好也，学而顺之；人之有恶也，避而讳之。\n天地之变化，在高与深；圣人之制道，在隐与匿。’这讲的就是‘韬晦’二字。\n反以观往，复以验来；反以知古，复以知今；反以知彼，复以知此。动静虚实之理不合于今，反古而求之。事有反而得复者，圣人之意也，不可不察。\n捭阖者，天地之道。捭阖者，以变动阴阳，四时开闭以化万物；纵横、反出、反复、反忤必由此矣。\n因其恶以权之，因其患以斥之。\n\n9《厚黑学》\n\n笑骂由他人笑骂，好坏我自为之。\n如果认准一个目标，那么就遇事要忍，出手要狠，善后要稳。\n能容忍眼前的侮辱，放下架子，顾全大局，这叫厚。\n读书三决：第一步，以古为敌。第二步，以古为友。第三步，以古为徒。\n一面正义大旗，一个响亮口号，会把天下的人心吸引过来，使原本并不存在正义与否的事业，也变得正义起来。\n古之为英雄豪杰者，不过面厚心黑而已。\n拨开黑的，让人见到真正的。\n讲因果的人，说有个阎王，问阎王在何处，他说在地下。讲耶教的人，说有个上帝， 问上帝在何处，他说在天上。讲理学的人，说有许多圣人，问圣人在何处，他说在古 时。这三种怪物，都是只可意中想象，不能目睹，不能证实。惟其不能证实，他的道 理就越是玄妙，信从的人就越是多。\n\n","plink":"http://thswind.github.io/2019/12/18/My booklist/"},{"title":"Deploy: openai/baselines","date":"2019-12-11T03:28:59.000Z","date_formatted":{"ll":"Dec 11, 2019","L":"12/11/2019","MM-DD":"12-11"},"updated":"2019-12-11T03:28:59.000Z","content":"踩了许多坑，现将部署深度强化学习的gym/baselines环境过程整理如下：\n\n\n安装 anaconda3\n使用wget在清华软件源下载很快，使用下面命令进行安装\nbash [文件名]\n\n\nconda create -n py3.6 python=3.6\n（经尝试，python3.6较为合适）\n\n\n安装对应的tensorflow-gpu加速版本，版本查询可查看我这篇博文\npip install tensorflow-gpu==1.14\nhttps://thswind.github.io/2019/11/01/tensorflow-gpu加速总结/\n参考：对openai/baselines的配置\n\n\n.tg  {border-collapse:collapse;border-spacing:0;}\n.tg td{font-family:Arial, sans-serif;font-size:14px;padding:10px 5px;border-style:solid;border-width:1px;overflow:hidden;word-break:normal;border-color:black;}\n.tg th{font-family:Arial, sans-serif;font-size:14px;font-weight:normal;padding:10px 5px;border-style:solid;border-width:1px;overflow:hidden;word-break:normal;border-color:black;}\n.tg .tg-lboi{border-color:inherit;text-align:left;vertical-align:middle}\n\n\n  \n    GPU\n    1080ti\n  \n  \n    cudnn\n    7.6.3\n  \n  \n    cuda\n    10.0\n  \n  \n    tensorflow-gpu\n    1.8.0\n  \n\n\n\n\n添加清华软件源：\ncd /etc/apt/\nvim sources.list\n(可在source.list文件最后添加下面这几条语句或者全部替换)\n123456789101112#默认注释了源码镜像以提高 apt update 速度，如有需要可自行取消注释deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial main restricted universe multiverse#deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial main restricted universe multiversedeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-updates main restricted universe multiverse#deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-updates main restricted universe multiversedeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-backports main restricted universe multiverse#deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-backports main restricted universe multiversedeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-security main restricted universe multiverse#deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-security main restricted universe multiverse#预发布软件源，不建议启用#deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-proposed main restricted universe multiverse#deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-proposed main restricted universe multiverse\n\n\n关于baselines这里有较好的注释https://stable-baselines.readthedocs.io/en/master/guide/quickstart.html\n\n\n进入 openai/baselines：https://github.com/openai/baselines\n\n\n123456789非root用户执行：sudo apt-get update &amp;&amp; sudo apt-get install cmake libopenmpi-dev python3-dev zlib1g-devroot用户执行：apt-get update &amp;&amp; apt-get install cmake libopenmpi-dev python3-dev zlib1g-dev如果安装不成功某个包，可以尝试以下几种安装方法直到安装成功为止method1:apt install [package]method2:conda install [package]\n\n\n克隆baselines到本地并安装\n123git clone https://github.com/openai/baselines.gitcd baselinespip install -e .\n\n\n安装单元测试\n便于检查还缺少哪些包，再根据提示进行安装，缺什么补什么，直到没有报错\n12pip install pytestpytest\n\n\n对单元测试中提示的错误进行解决\nerror1: No module named ‘matplotlib’\n\npip install matplotlib\n\nerror2: No module named ‘pandas’\n\npip install pandas\n\nerror3: No module named ‘filelock’\n\npip install filelock\n\nerror4: No module named ‘atari_py’\n\npip install gym[atari]\n\nerror5: you can install ffmpeg via brew install ffmpeg… sudo apt-get install ffmpeg. On Ubuntu 14.04, however, you’ll need to install avconv with sudo apt-get install libav-tools.\n\napt-get install ffmpeg  (若提示有包未下载成功，则重复执行几次)\napt-get install libav-tools\n\nerror6：UserWarning: An interactive session is already active. This can cause out-of-memory errors in some cases. You must explicitly call InteractiveSession.close() to release resources held by the other session(s).\n\n可选择终止该主机上运行的其他涉及tensorflow的进程\n或忽视该问题\n\n\n\n样例测试\n\n\n1python -m baselines.run --alg=deepq --env=PongNoFrameskip-v4 --num_timesteps=1e6\n​\t需要保存模型可用：\n1python -m baselines.run --alg=ppo2 --env=PongNoFrameskip-v4 --num_timesteps=2e7 --save_path=~/models/pong_20M_ppo2\n​\t需要加载模型可用：\n12python -m baselines.run --alg=ppo2 --env=PongNoFrameskip-v4 --num_timesteps=0 --load_path=~/models/pong_20M_ppo2 --play\n\n记录和可视化学习曲线和其他训练指标\n\n1python -m baselines.run --alg=ppo2 --env=PongNoFrameskip-v4 --num_timesteps=2e7 --save_path=~/models/pong_20M_ppo2 --log_path=~/logs/Pong/\n\n\n如何加载和显示训练数据可参考文档\nhttps://github.com/openai/baselines/blob/master/docs/viz/viz.ipynb\n\n\n","plink":"http://thswind.github.io/2019/12/11/Deploy openai+baselines environment/"},{"title":"Bugs","date":"2019-11-30T10:15:08.000Z","date_formatted":{"ll":"Nov 30, 2019","L":"11/30/2019","MM-DD":"11-30"},"updated":"2019-11-30T10:15:08.000Z","content":"反射型xss漏洞\n时间问题，待续\n","plink":"http://thswind.github.io/2019/11/30/Bugs/"},{"title":"latex-beamer tips","date":"2019-11-29T07:42:46.000Z","date_formatted":{"ll":"Nov 29, 2019","L":"11/29/2019","MM-DD":"11-29"},"updated":"2019-11-29T07:42:46.000Z","content":"有时候为了找到一个字符或者实现某种布局的latex表示方法会花好多时间查网站查资料。比较花时间，现将我遇到的和解决的一些操作总结如下：\n1 推荐文档\n\nlshort-zh-cn中文版本.pdf\nbeameruserguide.pdf\ntikzpgfmanual.pdf\ntcolorbox.pdf\n\n与其网上找别人的解决方法，不如自己去查官方文档。（不过偶尔网上找也有奇效）\n2 九九八十一难\n\n\n仅在当前页面（frame）有效的布局\n{ % all template changes are local to this group.\n\\setbeamertemplate{navigation symbols}{}\n\\begin{frame}{研一(下学期)学习安排与预期成果}%[plain]\n    \\begin&#123;tikzpicture&#125;[remember picture,overlay]\n        \\node[at=(current page.center)] &#123;\n            \\includegraphics[width=\\paperwidth]&#123;plan.png&#125;\n        &#125;;\n    \\end&#123;tikzpicture&#125;\n \\end&#123;frame&#125;\n\n}\n\n\n数学计算符号（主要是字体的变化）\n\\mathbb{大写字母}\t空心大写字母\n\\mathcal{大写字母}\t特殊字体的字母（常见于数学符号比如N，这里N表示高斯分布）\n\n\n固定汇报与作者及单位\n\\author{reporter：THSWind\\[3ex]\nXXXXXX institute}\n\\date{2019年04月11日}\n\n\n图片布局与大小\n\\includegraphics[width=\\paperwidth]{plan.png}    与1结合使用效果更好，同理，height=\\paperheig…可根据图片本身是长度更长还是宽度更宽来决定使用width还是height。\n\n\n分栏\n\\begin{frame}{基于Mnist数据集的CNN模型优化}\n​\t\\begin{columns}[c] % The “c” option specifies centered vertical alignment while the “t” option is used for top vertical alignment\n​\t\t\\column{.45\\textwidth} % Left column and width\n​\t        写些想写的\n​\t\t\\column{.5\\textwidth} % Right column and width\n​                做些想做的\n​\t\\end{columns}\n\\end{frame}\n\n\nbeamer-&gt;tikzpicture-&gt;node布局\n\\node[at=(current page.center)]   此句是完全居中（但经测试，对于树状结构它并非完全居中的，这种情况看下面一句）\n\\node[yshift=-1.5cm,xshift=0cm] at (current page.center)  （使得y轴沿着中心往下偏移1.5厘米），可自己调整偏移量。\n其中center可被替换为east， west, north, south, north west等等。\n\n\n表格生成方式\nhttps://www.latex-tables.com/\nhttps://www.tablesgenerator.com/\n推荐利用这两个网站图形化的操作实现后复制到你的latex之中就搞定。\n\n\n空格\n姓　　名，两个字中间就是两个空格字符。有时候 \\quad 没有效果，它有奇效。\n\n\n会持续更新…\n","plink":"http://thswind.github.io/2019/11/29/latex-beamer tips/"},{"title":"Ubuntu: double screen+settings","date":"2019-11-17T11:02:53.000Z","date_formatted":{"ll":"Nov 17, 2019","L":"11/17/2019","MM-DD":"11-17"},"updated":"2019-11-17T11:02:53.000Z","content":"由于使用双屏习惯了，在我装了windows10和ubuntu16.04的双系统之后，切换到ubuntu时。总是被ubuntu的双屏以及基本设置所耽误时间。所以在折腾了几次之后，我决定将ubuntu16.04下最常见的三种问题及其解决方法总结下来：\n1 双屏设置\n\n\n问题1（描述）：在装了双系统后，首次打开ubuntu，由于是双屏，常常会出现有一边屏幕亮（无任何图标，但可以用鼠标右键，左键），另一边不亮（但又不是完全黑）。\n\n\n解决过程：后来，我重启过程中发现，两边屏幕都提示无vga信号。我意识到不亮这边的屏幕并不是因为坏了。为了验证此想法，我切换到window系统，开机后双屏正常扩展。说明屏幕没有坏的判断正确。\n既然没有坏，我想到另一种可能，通常双屏扩展时，通常图标都在其中一个屏幕上，另一个屏幕是空的。会不会现在亮着的这个屏幕就是空的那个。如果是的话。我只需要设置一下显示器就好了。\n问题来了，现在我只看得见鼠标和一个空屏幕，怎么做呢？\n\n鼠标右键-&gt;更换背景 进入了设置，进入设备。显示那里，将当前显示器设置为主显示器。点一下 应用 搞定。如果未成功的话，恢复一下即可。（有的是因为英伟达的驱动bug导致）\n\n\n\n命令行解决：利用xrandr命令\n首先在终端输入：xrandr\n会显示目前的外置屏幕接口连接情况。我们注意哪些屏幕是连接的，一般有 dp, dvi,hdmi等等，与显示器型号以及所用的接口有关。以及primary（带有此单词的是主显示器）\n比如说，显示的信息中有：DP-1和HDMI-0是 connected。\n将DP-1设置为主显示器，命令如下：\nxrandr --output DP-1 --auto --primary\n将HDMI-0设置在 主显示器DP-1的右边，命令如下：\nxrandr --output HDMI-0 --right-of DP-1 --auto\n\n\n\n\n2 输入法问题\n默认安装的ubuntu16.04是没有中文输入法的，这点很不方便。所以我决定安装一个中文输入法，google拼音，搜狗输入法，选哪个呢，我选了第一个。搜狗太多广告了，花里胡哨的。只要打字速度跟得上，输入法什么的没多大关系。好，开始安装google拼音。\n首先ubuntu下输入法的框架有iBus和fcitx。\n\n\n安装fcitx\nsudo apt-get install fcitx\n\n\n安装google拼音\nsudo apt-get install fcitx-googlepinyin\n\n\n启用fcitx\n\n\n进入setting-&gt;language,点一下manage部分,出现Language Support。\n在 Keyboard input method system处，选择 fcitx。\n记住，务必重启电脑。（有时候注销也可以）\n\n\n启用google拼音\n终端输入：fcitx-configtool\n弹出名为：Input Method Configuration的窗口\n点击窗口左下方的+号，取消勾选Only Show Current Language\n在下方搜索框输入：google pinyin\n在上方选中：Google Pinyin，通过左下方的上下符号将它置顶，点击ok。\n\n\n这样google拼音安装完成。\n3 禁止休眠问题\n我们在跑机器学习相关的程序时，跑几天的代码是常有的事，可ubuntu老是会自己进入休眠状态，甚至无法被唤醒。这点十分不好。\n\n\n进入setting， power，blank那里设置为 never\n\n\n终端输入：setterm -blank 0\n注意：2 需要在root权限下输入。\n\n\n","plink":"http://thswind.github.io/2019/11/17/Ubuntu+double screen+settings/"},{"title":"Algorithm: SumTree practice","date":"2019-11-08T05:00:36.000Z","date_formatted":{"ll":"Nov 8, 2019","L":"11/08/2019","MM-DD":"11-08"},"updated":"2019-11-08T05:00:36.000Z","content":"代码\n代码来源于网络，我主要对这段代码进行了解读。并对代码最后6行用于测试的例子的代码计算过程做了详细的梳理。\nimport numpy as np\nclass Tree(object):\nwrite = 0  # 表示第几个叶子节点可用（未被写入数据或可覆盖原数据）\ndef __init__(self, capacity):\nself.capacity = capacity  # capacity是叶子节点个数，\nself.tree = np.zeros(2 * capacity)  # 从1开始编号[1,capacity]\nself.data = np.zeros(capacity+1, dtype=object)  # 存叶子节点对应的数据data[叶子节点编号id] = data\ndef add(self, p, data):\n    idx = self.write + self.capacity  \n    self.data[self.write+1] = data\n    self._updatetree(idx, p)\n    self.write += 1\n    if self.write &gt; self.capacity:  \n        self.write = 0\n \ndef _updatetree(self, idx, p):\n    change = p - self.tree[idx]  \n    self._propagate(idx, change)  \n    self.tree[idx] = p  \n \ndef _propagate(self, idx, change):\n    parent = idx // 2  \n    self.tree[parent] += change  # 更新父节点的值，是向上传播的体现\n    if parent != 1:\n        self._propagate(parent, change)  \n \ndef _total(self):\n    return self.tree[1]  \n \ndef get(self, s):\n    idx = self._retrieve(1, s)  \n    index_data = idx - self.capacity + 1  \n    return (idx, self.tree[idx], self.data[index_data])\n \ndef _retrieve(self, idx, s):\n    left = 2 * idx  \n    right = left + 1\n    if left &gt;= (len(self.tree)-1):  \n        return idx\n    if s &lt;= self.tree[left]:\n        return self._retrieve(left, s)  # 往左孩子处查找\n    else:\n        return self._retrieve(right, s - self.tree[left])  # 往右孩子处查找\n\ntree = Tree(5)\ntree.add(1,3)\ntree.add(2,4)\ntree.add(3,5)\ntree.add(4,6)\ntree.add(6,11)\nprint(tree.get(4))  # (8, 4.0, 6)\n我对末尾六行代码及其结果计算过程梳理\n初始化条件（class中已给出）：write=0\ntree = Tree(5) =&gt;capacity=5\n\ndata:\n[0,0,0,0,0,0]\nstep 1: tree.add(1,3)\np=1, data=3\nidx=write+capacity=5\ndata[write+1]=data=3\ndata:[0,3,0,0,0,0]\nupdatetree(idx,p)\n\n\nupdatetree(5,1)\nchange=p-tree[idx]=1-0=1\npropagate(idx,change)\n\n\npropagate(5,1)\nparent=idx//2=2\ntree[parent]+=change\ntree[2]=1\n\n\ntree\n                     0                                                \n                   /   \\\n                  /     \\\n                 /       \\\n                /         \\\n               /           \\\n              /             \\\n             /               \\\n            /                 \\\n         1                      0                         \n       /   \\                   /   \\\n      /     \\                 /     \\\n     /       \\               /       \\\n    /         \\             /         \\\n   0           0            0           0          \n /   \\                 \n/     \\                \n0      0                \n\n\n\nif parent !=1\nprogpagate(parent, change)\n\n\npropagate(2,1)\nparent=1\ntree[parent]=1\n                         1                                                \n                       /   \\\n                      /     \\\n                     /       \\\n                    /         \\\n                   /           \\\n                  /             \\\n                 /               \\\n                /                 \\\n             1                      0                         \n           /   \\                   /   \\\n          /     \\                 /     \\\n         /       \\               /       \\\n        /         \\             /         \\\n        0          0           0           0          \n      /   \\                 \n     /     \\                \n    0       0 \n\n\n\n\n\n\n\ntree[idx]=p\n                     1                                                \n                   /   \\\n                  /     \\\n                 /       \\\n                /         \\\n               /           \\\n              /             \\\n             /               \\\n            /                 \\\n         1                      0                         \n       /   \\                   /   \\\n      /     \\                 /     \\\n     /       \\               /       \\\n    /         \\             /         \\\n    0          1           0           0          \n  /   \\                 \n /     \\                \n0       0 \n\n\n\nwrite=1\nstep 2: tree.add(2,4)\np=2, data=4\nidx=write+capacity=6\ndata[write+1]=data=4\ndata:[0,3,4,0,0,0]\nupdatetree(idx,p)\n\n\nupdatetree(6,2)\nchange=p-tree[idx]=2-0=2\npropagate(idx,change)\n\n\npropagate(6,2)\nparent=idx//2=3\ntree[parent]+=change\ntree[3]=2\n\n\ntree\n123456789101112131415161718                     1                                                                   /   \\                  /     \\                 /       \\                /         \\               /           \\              /             \\             /               \\            /                 \\         1                      2                                /   \\                   /   \\      /     \\                 /     \\     /       \\               /       \\    /         \\             /         \\   0           1            0           0           /   \\                 /     \\                0      0                \n\n\nif parent !=1\nprogpagate(parent, change)\n\n\npropagate(3,2)\nparent=1\ntree[parent]=3\n12345678910111213141516171819                     3                                                                   /   \\                  /     \\                 /       \\                /         \\               /           \\              /             \\             /               \\            /                 \\         1                      2                                /   \\                   /   \\      /     \\                 /     \\     /       \\               /       \\    /         \\             /         \\    0          1           0           0            /   \\                  /     \\                0       0 \n\n\n\n\n\n\ntree[idx]=p=2\n123456789101112131415161718                     3                                                                   /   \\                  /     \\                 /       \\                /         \\               /           \\              /             \\             /               \\            /                 \\         1                      2                                /   \\                   /   \\      /     \\                 /     \\     /       \\               /       \\    /         \\             /         \\    0          1           2           0            /   \\                  /     \\                0       0 \n\n\nwrite=2\nstep 3: tree.add(3,5)\np=3, data=5\nidx=write+capacity=7\ndata[write+1]=data=5\ndata:[0,3,4,5,0,0]\nupdatetree(idx,p)\n\n\nupdatetree(7,3)\nchange=p-tree[idx]=3-0=3\npropagate(idx,change)\n\n\npropagate(7,3)\nparent=idx//2=3\ntree[parent]+=change\ntree[3]=5\n\n\ntree\n123456789101112131415161718                     3                                                                   /   \\                  /     \\                 /       \\                /         \\               /           \\              /             \\             /               \\            /                 \\         1                      5                                /   \\                   /   \\      /     \\                 /     \\     /       \\               /       \\    /         \\             /         \\   0           1           2           0           /   \\                 /     \\                0      0                \n\n\nif parent !=1\nprogpagate(parent, change)\n\n\npropagate(3,3)\nparent=1\ntree[parent]=6\n12345678910111213141516171819                     6                                                                   /   \\                  /     \\                 /       \\                /         \\               /           \\              /             \\             /               \\            /                 \\         1                      5                                /   \\                   /   \\      /     \\                 /     \\     /       \\               /       \\    /         \\             /         \\    0          1           2           0            /   \\                  /     \\                0       0 \n\n\n\n\n\n\ntree[idx]=p=3\n123456789101112131415161718                     6                                                                   /   \\                  /     \\                 /       \\                /         \\               /           \\              /             \\             /               \\            /                 \\         1                      5                                /   \\                   /   \\      /     \\                 /     \\     /       \\               /       \\    /         \\             /         \\    0          1           2           3            /   \\                  /     \\                0       0 \n\n\nwrite=3\nstep 4: tree.add(4,6)\np=4, data=6\nidx=write+capacity=8\ndata[write+1]=data=6\ndata:[0,3,4,5,6,0]\nupdatetree(idx,p)\n\n\nupdatetree(8,4)\nchange=p-tree[idx]=4-0=4\npropagate(idx,change)\n\n\npropagate(8,4)\nparent=idx//2=4\ntree[parent]+=change\ntree[4]=4\n\n\ntree\n123456789101112131415161718                     6                                                                   /   \\                  /     \\                 /       \\                /         \\               /           \\              /             \\             /               \\            /                 \\         1                      5                                /   \\                   /   \\      /     \\                 /     \\     /       \\               /       \\    /         \\             /         \\   4           1           2           3           /   \\                 /     \\                0      0                \n\n\nif parent !=1\npropagate(parent, change)\n\n\npropagate(4,4)\nparent=2\ntree[parent]=5\n1234567891011121314151617181920                     6                                                                   /   \\                  /     \\                 /       \\                /         \\               /           \\              /             \\             /               \\            /                 \\         5                      5                                /   \\                   /   \\      /     \\                 /     \\     /       \\               /       \\    /         \\             /         \\   4           1           2           3            /   \\                  /     \\                0       0 \nif parent !=1\npropagate(parent,change)\n\n\npropagate(2,4)\nparent=1\ntree[parent]=10\n                     10                                                \n                   /   \\\n                  /     \\\n                 /       \\\n                /         \\\n               /           \\\n              /             \\\n             /               \\\n            /                 \\\n         5                      5                         \n       /   \\                   /   \\\n      /     \\                 /     \\\n     /       \\               /       \\\n    /         \\             /         \\\n   4           1           2           3          \n  /   \\                 \n /     \\                \n0       0 \n\n\n\n\n\n\n\n\n\ntree[idx]=p=4\n123456789101112131415161718                     10                                                                   /   \\                  /     \\                 /       \\                /         \\               /           \\              /             \\             /               \\            /                 \\         5                      5                                /   \\                   /   \\      /     \\                 /     \\     /       \\               /       \\    /         \\             /         \\    4          1           2           3            /   \\                  /     \\                4       0 \n\n\nwrite=4\nstep 5: tree.add(6,11)\np=6, data=11\nidx=write+capacity=9\ndata[write+1]=data=11\ndata:[0,3,4,5,6,11]\nupdatetree(idx,p)\n\n\nupdatetree(9,6)\nchange=p-tree[idx]=6-0=6\npropagate(idx,change)\n\n\npropagate(9,6)\nparent=idx//2=4\ntree[parent]+=change\ntree[4]=10\n\n\ntree\n123456789101112131415161718                     10                                                                   /   \\                  /     \\                 /       \\                /         \\               /           \\              /             \\             /               \\            /                 \\         5                      5                                /   \\                   /   \\      /     \\                 /     \\     /       \\               /       \\    /         \\             /         \\   10           1           2           3           /   \\                 /     \\                4      0                \n\n\nif parent !=1\npropagate(parent, change)\n\n\npropagate(4,6)\nparent=2\ntree[parent]=11\n1234567891011121314151617181920                     6                                                                   /   \\                  /     \\                 /       \\                /         \\               /           \\              /             \\             /               \\            /                 \\         11                      5                                /   \\                   /   \\      /     \\                 /     \\     /       \\               /       \\    /         \\             /         \\   10           1           2           3            /   \\                  /     \\                4       0 \nif parent !=1\npropagate(parent,change)\n\n\npropagate(2,6)\nparent=1\ntree[parent]=16\n123456789101112131415161718                     16                                                                   /   \\                  /     \\                 /       \\                /         \\               /           \\              /             \\             /               \\            /                 \\         11                     5                                /   \\                   /   \\      /     \\                 /     \\     /       \\               /       \\    /         \\             /         \\   10           1           2           3            /   \\                  /     \\                4       0 \n\n\n\n\n\n\n\n\ntree[idx]=p=6\n123456789101112131415161718                     16                                                                   /   \\                  /     \\                 /       \\                /         \\               /           \\              /             \\             /               \\            /                 \\         11                      5                                /   \\                   /   \\      /     \\                 /     \\     /       \\               /       \\    /         \\             /         \\   10          1           2           3            /   \\                  /     \\                4       6 \n\n\nwrite=5\nstep 6: print(tree.get(4))\ntree.get(4)=&gt;s=4\nidx=retrieve(1,s)\n\n\nretrieve(1,4)\nidx=1,s=4\nleft=2*idx=2\nright=3\nif left&gt;= 9:\n​\treturn idx\nif s&lt;=tree[left]:\n​\treturn retrieve(left,4)\n\n\nretrieve(2,4)\nleft=4 right=5\nif left&gt;=9:\n​\treturn idx\nif s&lt;=tree[left]=10\n​\treturn retrieve(left,4)\n\n\nretrieve(4,4)\nleft=8 right=9\nif left&gt;=9\n​\treturn idx\nif s&lt;=tree[left]\n​\tretrieve(left,4)\n\n\nretrieve(8,4)\nleft=16, right=17\nif left&gt;=9\n​\treturn idx\n​\tidx=8\n\n\n\n\n\n\n\n\nidx=8\nindex_data=8-5+1=4\n此时data为：[0,3,4,5,6,11]\nreturn(idx, self.tree[idx], self.data[index_data])\nreturn(8,4.0,6)\n故输出为：\n8，4.0，6\n此次代码分析，到此结束。\n","plink":"http://thswind.github.io/2019/11/08/Sumtree algorithm exercise/"},{"title":"Parameter Space Noise For Exploration","date":"2019-11-06T12:11:01.000Z","date_formatted":{"ll":"Nov 6, 2019","L":"11/06/2019","MM-DD":"11-06"},"updated":"2019-11-06T12:11:01.000Z","content":"这篇论文于2018年1月31日发表于ICLR会议。\n1 简介\n深度强化学习方法在探索行为方面通常通过在动作空间中加入噪声。而另一种可选的方法则是通过直接在agent的参数中添加噪声。诸如进化策略之类的方法用到参数干扰，但会丢弃过程中所有的时间结构，且需要更多的样本。将参数噪声和传统RL方法结合，可以将两者的优点结合起来。这篇论文证明了 off-policy 和 on-policy 方法都从这种方法中得到了改进，实验对比的算法有： DQN, DDPG, 和TRPO。实验环境在高维离散动作环境，且为连续控制任务。\n探索依然是现代深度强化学习中的一个重要挑战，探索的主要目的是确保 agent 的动作不会提前收敛到一个局部最优解。\n2 Off-Policy Methods\n2.1 Deep Q-Networks(DQN)\nDQN使用深度神经网络作为函数近似器去估计最优Q值函数，该等式符合Bellman最优方程。\n\n2.2 Deep Deterministic Policy  Gradients(DDPG)\nDDPG是一种 actor-critic 算法，适用于连续动作空间。和DQN相似，其 critic 使用 off-policy 数据和递归的Bellman最优方程去估计Q值函数。\n\n3 On-Policy Methods\n3.1 Trust Region Policy Optimization(TRPO)\n4 Parameter Space Noise for Exploration\n为了实现结构化探索，我们从一系列策略中采样，这些策略都是通过在策略的参数向量中加入高斯噪声而得到。\n\n重要的是，在整个过程中，我们对策略的采样只发生在每个episode的开端。为了方便和可读性，我们标记这个被干扰的策略为\n\n类似的，\n\nState-dependent exploration\n动作空间噪声和参数空间噪声之间有重要的差异。\n考虑连续动作空间的情况：\n当使用高斯动作噪声，动作将会被采样根据一些随机策略产生：\n\n因此，即便对于一个固定的状态 s， 我们也几乎能肯定的获得一个不同的动作，无论在过程中该状态是否会再次被采样。因为动作空间噪声是完全独立于当前状态，需要注意，这对于相联动作空间噪声同样适用。\nPerturbing deep neural networks\n通过使用球形高斯噪声这种有意义的方法去干预深度神经网络的参数不是很明显，因为深度神经网络一般有数百万的参数和复杂的非线性交互。然而，2017年 Salimans等人提出了一种简单的网络再参数化将其实现。更确切的说，我们在被干预的层之间使用 layer normalization。由于这在同一层的不同激活之间normalizing，所以，即使不同的层对噪声的敏感度不同，也可以在所有层上使用相同的干扰尺度。\nAdaptive noise scaling\n参数空间噪声要求我们取一个合适的标量 sigma, 这可能是有问题的，因为该标量将强烈的依赖于特定的网络架构，并可能随着时间的推移而变化，因为随着学习的进展，参数对噪声变得更加敏感。另外，虽然容易直观的掌握动作空间噪声的尺度，但是很难理解参数空间的尺度。\n我们提出了一个简单的方案，以一种简单而直接的方式解决上述所有的限制。这是通过随着时间来调整参数空间噪声的尺度。并将其与它引起的动作空间变化相关联来实现的。更具体地说，我们可以在动作空间中被干扰与非干扰策略之间定义一个距离度量。并根据它是否低于或者高于某个阈值来相应增加或者减少参数空间噪声。\n\n其中 α 是一个标量因子， δ 是一个阈值。\nParameter space noise for off-policy methods\n在 off-policy 情况下，参数空间噪声可以直接应用，因为通过定义可以使用 off-policy 收集的数据。我们仅仅会干扰探索的策略，，并通过replay这些数据来训练非干扰网络。\nParameter space noise for on-policy methods\n参数噪声可以合并在一个 on-policy 设置中，使用一个改动的策略梯度 （Rückstieß 等人于2008年提出）。\n策略梯度方法优化\n\n给一个随机策略\n\n期望的回报可以用似然比和再参数化技巧来扩展(Kingma &amp; Welling, 2013)。\n\n","plink":"http://thswind.github.io/2019/11/06/Parameter Space Noise For Exploration/"},{"title":"Big V: vscode+anaconda","date":"2019-11-06T05:29:20.000Z","date_formatted":{"ll":"Nov 6, 2019","L":"11/06/2019","MM-DD":"11-06"},"updated":"2019-11-06T05:29:20.000Z","content":"1 VScode的优点\nVScode用于编写python程序再适合不过了。实在是居家必备、码首是瞻的神器。\n\n免费、开源、多平台支持（windows、Linux、mac）\n占系统资源少，内存上相对eclipse，vscode占用内存更少。eclipse约占478MB（1个进程），vscode约占200MB（6个进程）\n提供丰富的插件，左侧的工具列表，安装卸载十分方便。\n界面美观，功能强大。\n下方的terminal窗口方便对缺少的包进行安装。\n\n2 Anaconda的优点\nAnaconda则是新手入门的神器，免去了频繁安装各种包的痛苦，安装Anaconda之后，将其根目录，脚本，和bin目录添加到系统环境变量中。使用起来更加方便。\n\n\nAnaconda附带了一大批常用的数据科学包（conda,python等180多个科学包及其依赖项），不需要单独下载。对新手比较友好。\n\n\nconda，包管理器，十分强大。\n\n\n两个强大的武器联手又会产生怎样绝妙的烟火呢？\n3 Vscode+Anaconda\n强强联手后，你将在vscode中享受两种利器的优点。特别指出的是，除了vscode免去安装某些包之外，还多了一个虚拟环境的功能。随时切换python编译环境。\n在vscode左下角，底色为紫色的白色字体的python版本环境说明处（颜色可能因个人界面设计而异），点击它，可以看见vscode界面正上方出现一个下拉选项。出现多个python环境。和Anaconda的环境，包括Anaconda创建的虚拟环境。\n以Vscode需要python2.7环境为例\n\n打开Anaconda prompt程序\n输入conda create -n env_name python=2.7\n这样就创建一个名为env_name的python2.7的虚拟环境\n再回到vscode中，点击左下角python版本那里\nvscode界面正上方出现一个下拉选项，选择我们刚创建的env_name虚拟环境即可。\n\n待续…\n","plink":"http://thswind.github.io/2019/11/06/vscode+anaconda/"},{"title":"Browser-related problems and solutions","date":"2019-11-05T08:00:36.000Z","date_formatted":{"ll":"Nov 5, 2019","L":"11/05/2019","MM-DD":"11-05"},"updated":"2019-11-05T08:00:36.000Z","content":"1 google 浏览器内存不足\n使用一段时间，偶尔会提示浏览器内存不足，通常是由于打开的页面过多，google占内存是出了名的。每个页面都有一系列子程序。\n解决办法：\n直接在浏览器输入：chrome://flags/#automatic-tab-discarding\n把automatic tab discarding 那里改为 Enabled，重启浏览器即可。\n","plink":"http://thswind.github.io/2019/11/05/Browser related issues/"},{"title":"Tensorflow-keras notes","date":"2019-11-05T04:59:59.000Z","date_formatted":{"ll":"Nov 5, 2019","L":"11/05/2019","MM-DD":"11-05"},"updated":"2019-11-05T04:59:59.000Z","content":"我们应该学会站在前辈们的肩膀上，目前已经有人利用 keras实现了常用的深度学习模型 LeNet， AlexNet， ZFNet， VGGNet， GoogleNet，Resnet。推荐一篇博文如下：\nhttps://blog.csdn.net/wang1127248268/article/details/77258055\n1 keras介绍与安装\n\n\n官网\nhttps://keras.io\n\n\n安装\npip install keras\n如果提示需要升级，则输入\npython -m pip install --upgrade pip\n可通过 python-&gt; import keras 检测是否安装成功。\n\n\n2 keras实现线性回归\n`# -- coding: utf-8 --`\n&quot;&quot;&quot;\nCreated on Tue Nov  5 14:27:20 2019\n@author: THSWind\n&quot;&quot;&quot;\nimport keras\nimport numpy as np\nimport matplotlib.pyplot as plt\n\\#按顺序构成的模型\nfrom keras.models import Sequential\n\\#Dense全连接层\nfrom keras.layers import Dense\n\\#使用numpy生成100个随机点\nx_data=np.random.rand(100)\nnoise=np.random.normal(0,0.01,x_data.shape)\ny_data=x_data*0.1+0.2+noise\n\\#显示随机点\nplt.scatter(x_data,y_data)\nplt.show()\n\\#构建一个顺序模型\nmodel=Sequential()\n\\#在模型中添加一个全连接层\nmodel.add(Dense(units=1,input_dim=1))\nmodel.compile(optimizer='sgd',loss='mse')\n\\#训练模型\nfor step in range(3001):\n​    \\#每次训练一个批次\n​    cost = model.train_on_batch(x_data,y_data)\n​    \\#每500个batch打印一次cost值\n​    if step % 500 == 0:\n​        print('cost',cost)\n\\#打印权值和偏置值\nW,b=model.layers[0].get_weights()\nprint('W:',W, 'b',b)\n\\#x_data输入网络中，得到预测值y_pred\ny_pred = model.predict(x_data)\n\\#显示随机点\nplt.scatter(x_data,y_data)\n\\#显示预测结果\nplt.plot(x_data,y_pred,'r-',lw=3)  #lw表示线条宽度\nplt.show()\n3 keras非线性回归\n`# -- coding:utf-8 --`\n'''\n\\* @Author: THSWind\n\\* @Date: 2019-11-05 15:39:27\n'''\nimport keras\nimport numpy as np\nimport matplotlib.pyplot as plt\n\\#按顺序构成的模型\nfrom keras.models import Sequential\n\\#Dense全连接层\nfrom keras.layers import Dense,Activation\nfrom keras.optimizers import SGD\n\\#\nx_data = np.linspace(-0.5,0.5,200)\nnoise = np.random.normal(0,0.02,x_data.shape)\ny_data = np.square(x_data) + noise\n\\# 显示随机点\nplt.scatter(x_data,y_data)\nplt.show()\n\\#构建一个顺序模型\nmodel=Sequential()\n\\#在模型中添加一个全连接层\n\\# 1-10-1\n\\#定义优化算法\nsgd = SGD(lr=0.3)    # 由于默认的sgd学习率较小，所以导入SGD，自定义学习率加快学习时间\n\\# 不添加激活函数，则拟合的曲线仍然可能是直线。因为默认的激活函数是一条直线f(x)=x\nmodel.add(Dense(units=10,input_dim=1))\nmodel.add(Activation('tanh'))\nmodel.add(Dense(units=1))\nmodel.add(Activation('tanh'))\nmodel.compile(optimizer=sgd,loss='mse')\n\\# tanh 在大多数情况下比 sigmoid好用 ————吴恩达\n\\#训练模型\nfor step in range(3001):\n​    \\#每次训练一个批次\n​    cost = model.train_on_batch(x_data,y_data)\n​    \\#每500个batch打印一次cost值\n​    if step % 500 == 0:\n​        print('cost',cost)\n\\#打印权值和偏置值\nW,b=model.layers[0].get_weights()\nprint('W:',W, 'b',b)\n\\#x_data输入网络中，得到预测值y_pred\ny_pred = model.predict(x_data)\n\\#显示随机点\nplt.scatter(x_data,y_data)\n\\#显示预测结果\nplt.plot(x_data,y_pred,'r-',lw=3)  #lw表示线条宽度\nplt.show()\n4 MNIST分类程序\n`# -- coding:utf-8 --`\n'''\n\\* @Author: THSWind\n\\* @Date: 2019-11-05 16:09:06\n'''\nimport numpy as np\nfrom keras.datasets import mnist\nfrom keras.utils import np_utils\nfrom keras.models import Sequential\nfrom keras.layers import Dense\nfrom keras.optimizers import SGD\n\\# 载入数据\n(x_train,y_train),(x_test,y_test)= mnist.load_data()\n\\# (60000,28,28)\nprint('x_shape: ',x_train.shape)\n\\#(60000)\nprint('y_shape: ', y_train.shape)\n\\#(60000,28,28)-&gt;(60000,784)\nx_train=x_train.reshape(x_train.shape[0], -1)/255.0\nx_test=x_test.reshape(x_test.shape[0], -1)/255.0\n\\# 转化label为 one-hot格式\ny_train=np_utils.to_categorical(y_train, num_classes=10)\ny_test=np_utils.to_categorical(y_test, num_classes=10)\n\\# 创建模型 输入784个神经元，输出10个神经元\nmodel = Sequential([\n​    Dense(units=10, input_dim=784, bias_initializer='one',activation='softmax')\n])\n\\# 定义优化器\nsgd = SGD(lr=0.2)\n\\# 定义优化器， loss function,训练过程中计算准确率\nmodel.compile(\n​    optimizer=sgd,\n​    loss='mse',\n​    metrics=['accuracy'],\n)\n\\# 训练模型\nmodel.fit(x_train,y_train,batch_size=32,epochs=10)\n\\# 评估模型\nloss,accuracy=model.evaluate(x_test,y_test)\nprint('\\ntest loss',loss)\nprint('accuracy', accuracy)\n5 交叉熵应用\nmodel.compile(\n​    optimizer=sgd,\n​    loss='categorical_crossentropy',  # 改为交叉熵\n​    metrics=['accuracy'],\n)\n6 Dropout\nfrom keras.layers import Dense,Dropout\n.......\n#drop(0.4) 表示让40%的神经元不工作\nmodel = Sequential([\n​    Dense(units=200, input_dim=784, bias_initializer='one',activation='tanh'),\n​    Dropout(0.4),\n​    Dense(units=200,  bias_initializer='one',activation='tanh'),\n​    Dropout(0.4),\n​    Dense(units=10,  bias_initializer='one',activation='softmax'),\n])\n7 正则化\nfrom keras.regularizers import l2\n.......\nmodel = Sequential([\n​    Dense(units=200, input_dim=784, bias_initializer='one',activation='tanh',kernel_regularizer=l2(0.0003)),\n​    Dense(units=200,  bias_initializer='one',activation='tanh',kernel_regularizer=l2(0.0003)),\n​    Dense(units=10,  bias_initializer='one',activation='softmax',kernel_regularizer=l2(0.0003)),\n])\n8 CNN手写识别\n`# -- coding:utf-8 --`\n'''\n\\* @Author: THSWind\n\\* @Date: 2019-11-05 17:53:34\n'''\nimport numpy as np\nfrom keras.datasets import mnist\nfrom keras.utils import np_utils\nfrom keras.models import Sequential\nfrom keras.layers import Dense,Dropout,Convolution2D,MaxPooling2D,Flatten\nfrom keras.optimizers import Adam\n\\# 载入数据\n(x_train,y_train),(x_test,y_test)= mnist.load_data()\n\\# (60000,28,28)\n\\#(60000,28,28)-&gt;(60000,28,28,1)   1是图片的深度，灰度模式\nx_train=x_train.reshape(-1,28,28,1)/255.0\nx_test=x_test.reshape(-1,28,28,1)/255.0\n\\# 转化label为 one-hot格式\ny_train=np_utils.to_categorical(y_train, num_classes=10)\ny_test=np_utils.to_categorical(y_test, num_classes=10)\n\\# 定义顺序模型\nmodel = Sequential()\n\\#第一个卷积层\n\\# input_shape 输入平面\n\\# filters 卷积核/滤波器个数\n\\# kernel_size 卷积窗口大小\n\\# strides 步长\n\\# padding padding方式  same/valid\n\\# activation 激活函数\nmodel.add(Convolution2D(\n​    input_shape = (28,28,1),\n​    filters=32,\n​    kernel_size=5,\n​    strides=1,\n​    padding='same',\n​    activation='relu'\n))\n\\#第一个池化层\nmodel.add(MaxPooling2D(\n​    pool_size=2,\n​    strides=2,\n​    padding='same',\n))\n\\#第二个卷积层\nmodel.add(Convolution2D(\n​    64,\n​    5,\n​    strides=1,\n​    padding='same',\n​    activation='relu'\n))\n\\#第二个池化层\nmodel.add(MaxPooling2D(2,2,'same',))\n\\#把第二个池化层的输出扁平化为1维\nmodel.add(Flatten())\n\\#第一个全连接层\nmodel.add(Dense(1024,activation='relu'))\n\\# dropout\nmodel.add(Dropout(0.5))\n\\#第二个全连接层\nmodel.add(Dense(10,activation='softmax'))\n\\#定义优化器\nadam=Adam(lr=1e-4)\n\\#定义优化器，loss function， 训练过程中计算准确率\nmodel.compile(optimizer=adam,loss='categorical_crossentropy',metrics=['accuracy'])\n\\#训练模型\nmodel.fit(x_train,y_train,batch_size=64,epochs=10)\n\\#评估模型\nloss,accuracy=model.evaluate(x_test,y_test)\nprint('test loss',loss)\nprint('test accuracy', accuracy)\n9 RNN应用\nRNN用于手写数字识别（结果表明，还是卷积神经网络适合一点，RNN不适用于手写数字识别，准确率没卷积神经网络高。）\n`# -- coding:utf-8 --`\n'''\n\\* @Author: THSWind\n\\* @Date: 2019-11-05 18:40:33\n'''\nimport numpy as np\nfrom keras.datasets import mnist\nfrom keras.utils import np_utils\nfrom keras.models import Sequential\nfrom keras.layers import Dense\nfrom keras.layers.recurrent import SimpleRNN\nfrom keras.optimizers import Adam\n\\# 数据长度 一行有28个像素\ninput_size = 28\n\\# 序列长度 一共有28行\ntime_steps = 28\n\\# 隐藏层 cell 个数\ncell_size = 50\n\\# 载入数据\n(x_train, y_train), (x_test, y_test) = mnist.load_data()\n\\#(60000,28,28)\nx_train=x_train/255.0\nx_test=x_test/255.0\n\\# 换 one hot格式\ny_train = np_utils.to_categorical(y_train, num_classes=10)\ny_test = np_utils.to_categorical(y_test, num_classes=10)\n\\# 创建模型\nmodel= Sequential()\n\\# 循环神经网络\nmodel.add(SimpleRNN(\n​    units=cell_size, # 输出\n​    input_shape = (time_steps, input_size), # 输入\n))\n\\# 输出层\nmodel.add(Dense(10, activation='softmax'))\n\\# 定义优化器\nadam = Adam(lr=1e-4)\n\\# 定义优化器，loss function， 训练过程中计算准确率\nmodel.compile(optimizer=adam, loss='categorical_crossentropy',metrics=['accuracy'])\n\\# 训练模型\nmodel.fit(x_train,y_train,batch_size=64,epochs=10)\n\\#评估模型\nloss, accuracy= model.evaluate(x_test, y_test)\nprint('test loss', loss)\nprint('test accuracy', accuracy)\n10 keras 模型的保存与载入\n保存\n\n\n保存模型以及参数\nmodel.save('model.h5')   # HDF5文件， pip install h5py\n\n\n只保存参数，与载入参数\nmodel.save_weights('my_model_weights.h5')\nmodel.load_weights('my_model_weights.h5')\n\n\n保存网络结构，与载入网络结构\nfrom keras.models import model_from_json\n......\njson_string = model.to_json()\nmodel = model_from_json(json_string)\n\n\n载入\nfrom keras.models import load_model\n......\n#载入模型\nmodel = load_model('model.h5')\n#评估模型\nloss, accurach = model.evaluate(x_test, y_test)\nprint('\\ntest loss', loss)\nprint('accuracy', accuracy)\n","plink":"http://thswind.github.io/2019/11/05/Tensorflow-keras notes/"},{"title":"tensorflow2.0 notes","date":"2019-11-05T04:06:02.000Z","date_formatted":{"ll":"Nov 5, 2019","L":"11/05/2019","MM-DD":"11-05"},"updated":"2019-11-05T04:06:02.000Z","content":"2019年1月份，Tensorflow 2.0预览版（alpha)发布，原本1.0版本实现神经网络的方法较多，重复api多。\n1 Tensorflow 2.0 特点\n\nTensorflow 2.0清理了废弃的API减少重复和简化了api。\n训练方面\n\n使用 Keras 和 eager execution轻松构建模型。为研究提供强大实验工具。\nTf.keras :允许创建复杂的拓扑，包括使用残差层，自定义多输入/输出模型以及强制编写的正向传递。轻松创建自定义训练循环。低级Tensorflow API始终可以使用，并可与更高级别的抽象一起工作，以实现完全可定制的逻辑。\n\n\n部署方面\n\n在任意平台实现稳健的生产环境模型部署\n无论在服务器、边缘设备还是在网页上，也不论你使用的是什么语言或平台，Tensorflow 总能让你轻易训练和部署模型。\nTensorflow 2.0 通过标准化交换格式来改进跨平台和跨语言部署。\n\n\n\n2 课程安排\n\n\n（一）tf.keras\n构建和训练模型的核心高级 API。\n\n单输入单输出 Sequential 顺序模型\n函数式 API\n\n\n\n（二）Eager 模式与自定义训练\n直接迭代和直观调试，Eager模式下求解梯度与自定义训练。\n\nEager 模式 ： 直接迭代和直观调试。\ntf.GradientTape : 求解梯度，自定义训练逻辑。\n\n\n\n（三）tf.data\n加载图片数据与结构化数据\n\n\n（四）tf.function\n自动图运算\n\n\n（五）卷积神经网络\n\n\n（六）多输出卷积神经网络综合实例\n\n\n（七）迁移学习\n\n\n（八）模型保存与可视化\n\n\n（九）Tensorboard可视化\n\n\n3 Tensorflow 安装\nTensorflow 2.0 兼容的 python 版本：\npython 2.7-3.6\n环境配置：安装Python 3.6，或者创建一个python3.6的虚拟环境。\n安装CPU版本：\npip install tensorflow==2.0.0-alpha0\n2019年7月新发布了beta0版本，所以可以安装beta0版本：\npip install tensorflow==2.0.0-beta0\n\n\n从指定软件源安装多个软件包\npip install numpy pandas matplotlib sklearn tensorflow==2.0.0-alpha0-i https://pypi.doubanio.com/simple\n上述命令表示从豆瓣软件源安装 numpy，pandas，matplotlib，sklearn，tensorflow2.0.0-alpha-i等软件包。\n\n\n配合notebook使用，体验更佳\npip install notebook-i https://pypi.doubanio.com/simple\n\n\n安装GPU版本\npip install tensorflow-gpu==2.0.0-alpha0\n必须在系统中安装 NVIDIA 相关软件（CUDA Toolkit (Tensorflow 支持 CUDA 10.0) 和 cuDNN SDK（7.4.1以及更高版本，用于深度神经网络的GPU加速原语库））\n","plink":"http://thswind.github.io/2019/11/05/tensorflow2.0 notes/"},{"title":"tensorflow-gpu acceleration","date":"2019-11-01T14:47:12.000Z","date_formatted":{"ll":"Nov 1, 2019","L":"11/01/2019","MM-DD":"11-01"},"updated":"2019-11-01T14:47:12.000Z","content":"由于在电脑CPU上跑程序有点慢，今天想到把程序放到服务器上使用gpu加速，节省一点时间。现根据实际情况，将此过程总结如下：\n1. 服务器配置\n\n\ngpu版本：Tesla P40      (查看方式：nvidia-smi      )\n \n\n\ncudnn版本： 6.0.21  （查看方法：\n 12345cat /usr/local/cuda/include/cudnn.h | grep CUDNN_MAJOR -A 2orcat /usr/include/cudnn.h | grep CUDNN_MAJOR -A 2\n）\n\n\ncuda版本：8 （查看方法：\n 12345cat /usr/local/cuda/version.txtornvcc  --version\n）\n\n\n或者同时查看cudnn和cuda版本信息\n 1conda list|grep cudnn\n\n\npython版本：2.7\n\n\n2. 重要：查看匹配的tensorflow-gpu版本\n  \n查看下来，我应该安装tensorflow-gpu-1.4.0\n3. 卸载与安装\n卸载\n\n\n如果之前安装过其他不匹配的tensorflow-gpu版本，可通过以下命令卸载\npip uninstall tensorflow\n\n\n安装\n\n注意此时我们需要安装指定的tensorflow-gpu版本（tensorflow-gpu-1.4.0）。如果不指定具体版本的话，会默认安装当前最新的版本。\npip install tensorflow-gpu==1.4.0\n\n到此结束，好了，畅游世界去吧~\n","plink":"http://thswind.github.io/2019/11/01/tensorflow-gpu acceleration/"},{"title":"encryption+hidden file","date":"2019-10-11T03:51:25.000Z","date_formatted":{"ll":"Oct 11, 2019","L":"10/11/2019","MM-DD":"10-11"},"updated":"2019-10-11T03:51:25.000Z","content":"1. 文件隐藏\n\n\nattrib +h +s +r +a [文件全路径]\n通过这种自动添加隐藏属性的方法，将文件变为了操作系统的隐藏文件。提高了安全性。其中的属性可以自己增减。h 表示隐藏属性、 r 只读属性、 a 存档属性（表示该文件在上次备份前已经修改过，对于频繁的文件批量管理很有帮助）、 s 系统文件属性。\n\n\n2. 信息隐藏\n需要dos下的copy命令，将一个文本文件合并到一个非文本文件中，从而实现隐藏的目的。\n准备\n\n一张图片，一个 .txt 后缀的文本文件\ncopy 图片路径/b + txt文件路径/a 生成路径\n\n举个简单的例子，比如当前我dos定位到两个文件所在的目录时（这里将两个文件放在同一个目录下）。那么采用命令： copy 图片.jpg/b + 文件.txt/a 新文件名.jpg 即可\n\n此时，如何查看加密信息呢，藏有信息的jpg文件上右键-&gt;打开方式-&gt;记事本，因为图片是二进制文件，所以上面部分是乱码。我们按住 Ctrl+end 定位到记事本文件的最后，就可以看见刚才加密的信息了。\n\n拓展（copy命令的妙用）\n平常我们在图形化界面下复制大文件需要花好多时间，其实如果你懂dos命令，在dos下用命令去复制，那么不管它多大的文件，只需要 2秒 就可以复制完毕。命令格式如下：\ncopy [路径] [路径]\n注意：文件夹复制不了，可以转为压缩包进行复制。尤其比较大的镜像文件效果杠杠的。\n3. 音乐加密\n以前我曾想象有一种加密方法，是通过音乐来传送密文。这样肯定是出其不意。直到后来我在网上发现了在17-18世纪就有一些数学家和密码学家认为音乐是传递信息最难被破解的方法之一。后来发现有下面几个网站可以做此转换，其算法和加密的方式我并未深入研究。\nhttps://www.wmich.edu/mus-theo/solfa-cipher/\n未完，待续…\n","plink":"http://thswind.github.io/2019/10/11/encryption+hidden file/"},{"title":"Play Windows","date":"2019-10-11T02:23:38.000Z","date_formatted":{"ll":"Oct 11, 2019","L":"10/11/2019","MM-DD":"10-11"},"updated":"2019-10-11T02:23:38.000Z","content":"我比较喜欢徒手撸电脑，将平时用的结合一些网友的操作技巧总结如下。过于简单的没有列出。\n运行命令\n\n\n命令\n功能\n\n\n\n\ncontrol userpasswords2\n管理密码\n\n\ntaskschd.msc\n任务计划管理器\n\n\ntaskmgr\n任务管理器\n\n\nappwiz.cpl\n快速卸载程序页面\n\n\nmspaint\n画图\n\n\nfirewall.cpl\n防火墙\n\n\nmain.cpl\n鼠标\n\n\nncpa.cpl\n网络连接\n\n\ndesk.cpl\n设置（显示，电源etc）\n\n\npowercfg.cpl\n电源选项\n\n\nsysdm.cpl\n系统属性\n\n\ntimedate.cpl\n时间日期\n\n\nmmsys.cpl\n声音\n\n\ninetcpl.cpl\nInternet属性\n\n\ndevmgmt.msc\n设备管理器\n\n\ngpedit.msc\n组策略\n\n\nsecpol.msc\n本地安全策略\n\n\nprintmanagement.msc\n打印机管理\n\n\nlusrmgr.msc\n本地用户和组\n\n\ncertmgr.msc\n证书管理\n\n\nservice.msc\n服务\n\n\nperfmon.msc\n性能监视器\n\n\nWF.msc\nWindows Defender防火墙\n\n\neventvwr.msc\n事件查看器\n\n\ncomexp.msc\n组件服务\n\n\ncompmgmt.msc\n计算机管理\n\n\ndxdiag.exe\n系统诊断\n\n\nmsconfig\n系统配置，禁止软件启动等\n\n\nrecent\n最近打开过的文件列表\n\n\ncontrol\n控制面板\n\n\nosk\n自带屏幕键盘\n\n\n截图\nWin+shift+s  截图工具\nwin+r snippingtool  自带截图工具\nCMD命令(其中命令较多，列举最常用的几个)\n\n\n命令\n功能\n\n\n\n\ndir\n列举当前目录下所有文件\n\n\ncd [绝对路径]\n进入某路径\n\n\ncd …\n返回上一级目录\n\n\ntree\n列举当前目录下所有文件的树状结构\n\n\nWindows快捷键\n\n\n命令\n功能\n\n\n\n\nCtrl+shift+n\n新建文件夹\n\n\nalt+d\n定位到地址栏\n\n\nCtrl+F4\n关闭当前文件\n\n\nAlt+F4\n关闭活动项或退出当前应用\n\n\nCtrl+Y\n还原上一步操作\n\n\nCtrl+Z\n撤销上一步操作\n\n\n资源管理器\n\nCtrl+enter 打开文件夹是在新窗口打开文件夹\nCtrl+shift+n  新建文件夹\nAlt+enter  查看文件属性\nAlt+左右方向键   资源管理器中进入或退出子目录\nShift+delete  彻底删除\n\n补充\n\n“Win键+数字键（0~9）”   ：可以快速启动锁定在任务栏中的前10个对应的程序\n批量重命名文件：在资源管理器中同时选择几个文件，接着按F2键，然后重命名这些文件中的一个，这样所有被选择的文件将会被重命名为新的文件名(在末尾处加上递增的数字)。\n大家都知道F5键可以用来刷新网页，不过它在记事本程序里还有一个作用：一键插入当前的日期和时间。这个看似微不足道的功能有时意外地好用。每写完一条记录或想法，按F5，这就是一个离线的微博哦~ （来自虫部落网友）\n在记事本第一行加入“.LOG”,双引号除外。也可以达到同 3 一样的效果\nwin10中，多窗口时，按住一个窗口，然后摇动几下，其余窗口会最小化，在继续摇动，会恢复。\nctrl+加号： word中把文字转换为下标输入，用ctrl+减号键可以恢复原状\nWin10滑动关机：  路径C:\\Windows\\System32，找到SlideToShutDown.exe，右键发送到桌面快捷方式，双击弹出滑动提示，滑动即可关机\n“Win+↑” 最大化 “Win+↓” 最小化\n2、自动关机（命令不带引号）\n①“shutdown -s -t 1800”   （1800秒后关机）\n②“at 23:00 shutdown -s”   （23点关机）\n③“shutdown -a”  （取消关机）\n\n桌面\n\n\n命令\n功能\n\n\n\n\nWin+A\n打开信息栏\n\n\nWin+D\n显示桌面\n\n\nWin+R\n打开运行\n\n\nWin+E\n我的电脑\n\n\nWin+L\n锁定电脑\n\n\nWin+B\n选定桌面右下角工具栏\n\n\nWin+I\n打开电脑设置\n\n\nWin+home\n缩小除当前窗口以外的所有窗口\n\n\nCtrl+shift+ESC\n打开任务管理器\n\n\nWin+Ctrl+D\n创建新的虚拟桌面\n\n\nWin+Ctrl+F4\n关闭当前虚拟桌面\n\n\nWin+Ctrl+ →（左右）\n切换虚拟桌面\n\n\nWin + ,\n临时查看桌面\n\n\n浏览器\n\n空格，向下翻页，shift+空格 可以上翻；\nCtrl+h  打开浏览器历史记录\nCtrl+shift+T  恢复刚关闭的网页\n\nShift+Window键+数字：启动锁定到任务栏中的由该数字所表示位置处的程序的新实例（主键盘区上的数字）\nAlt+Windows键+数字：打开锁定到任务栏中的由该数字所表示位置处的程序的跳转列表 （主键盘区上的数字）\nWin+X+U+U : win10关机快捷键\nctrl + alt + → :改变屏幕显示方向\n","plink":"http://thswind.github.io/2019/10/11/Play Windows/"},{"title":"Ubuntu: command doesn't work","date":"2019-10-10T12:23:13.000Z","date_formatted":{"ll":"Oct 10, 2019","L":"10/10/2019","MM-DD":"10-10"},"updated":"2019-10-10T12:23:13.000Z","content":"Ubuntu环境下，所有命令失效，可能的原因是安装某些软件误将环境变量改变了。可尝试：\n1export PATH=$PATH:/bin:/usr/bin\n或\n1export PATH=$PATH:/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin\n","plink":"http://thswind.github.io/2019/10/10/Unable to execute command under ubuntu/"},{"title":"Attach printer","date":"2019-10-08T07:37:59.000Z","date_formatted":{"ll":"Oct 8, 2019","L":"10/08/2019","MM-DD":"10-08"},"updated":"2019-10-08T07:37:59.000Z","content":"\n\n\n查共享打印机所连接电脑的ip地址 通过：\n1ipconfig\n可获得打印机的本地ip。\n\n\n\n打开要安装打印机的电脑，打开 运行 ，输入 步骤1 所获取到的 ip 地址。（以 192.168.0.19 为例）\n`\\\\192.168.0.19`\n输入后回车\n\n\n输入后，系统自动检索该IP地址下已经安装且共享的打印机型号，进入 网络 中查看。\n\n\n双击要安装的打印机，会弹出 Windows打印机安装，正查找驱动程序。\n\n\n查找结束，弹出提示安装打印机驱动，点击 安装驱动程序\n\n\n安装完成后，系统会自动弹出一个打印机的窗口，安装完成。\n\n\n可 Ctrl+P 打印文档测试一下。\n\n\nps: 若是未成功，可能是没有开启网络发现。\n","plink":"http://thswind.github.io/2019/10/08/Attach printer/"},{"title":"GPU manual for the poor","date":"2019-10-08T05:06:02.000Z","date_formatted":{"ll":"Oct 8, 2019","L":"10/08/2019","MM-DD":"10-08"},"updated":"2019-10-08T05:06:02.000Z","content":"在资源紧张的情况下，除了要计划经济以外，我们还要计划gpu的使用。在此背景下，总结一份 gpu勤俭指南。\n注意\n运行程序前使用 CUDA_VISIBLE_DEVICES=GPU编号 来指定使用哪块显卡，用多显卡的话在程序里写好，如果直接用 python **.py, 这样会占用全部显卡。\n监控GPU状态\n首先需要安装 gpustat 功能：\n1pip  install gpustat\n查看gpu状态：\n1gpustat -u\n指定使用GPU\npytorch下：\n\n\n直接在终端指定：\n1CUDA_VISIBLE_DEVICES=1 python my_script.py\n\n\npyton代码中指定：\n12import osos.environ[&quot;CUDA_VISIBLE_DEVICES&quot;] = &quot;2&quot;\n\n\n以上两种方式类似于tensorflow指定gpu的方式\n\n\n使用set_device函数指定：\n12import torchtorch.cuda.set_device(id)\n\n\nps: gpu编号从0开始\ntensorflow下：\n\n可在文件开头加入以下代码\n\n123import osos.environ[&quot;CUDA_DEVICE_ORDER&quot;] = &quot;PCI_BUS_ID&quot;os.environ[&quot;CUDA_VISIBLE_DEVICES&quot;] = &quot;1&quot;       # 使用第二块GPU（从0开始）\n\n\n也可以指定使用某几块gpu\n123import osos.environ[&quot;CUDA_DEVICE_ORDER&quot;] = &quot;PCI_BUS_ID&quot;os.environ[&quot;CUDA_VISIBLE_DEVICES&quot;] = &quot;0, 2&quot;    # 使用第一, 三块GPU\n\n\n禁用GPU\n12import osos.environ[&quot;CUDA_VISIBLE_DEVICES&quot;] = &quot;-1&quot;\n\n\n强制仅使用CPU\n123import osos.environ[&quot;CUDA_DEVICE_ORDER&quot;] = &quot;PCI_BUS_ID&quot;   # see issue #152os.environ[&quot;CUDA_VISIBLE_DEVICES&quot;] = &quot; &quot;\n","plink":"http://thswind.github.io/2019/10/08/GPU manual for the poor/"},{"title":"linux+python+virtual environment","date":"2019-10-08T03:49:31.000Z","date_formatted":{"ll":"Oct 8, 2019","L":"10/08/2019","MM-DD":"10-08"},"updated":"2019-10-08T03:49:31.000Z","content":"通常实验室里一个服务器是大家公用的，为了不引起包冲突，创建一个虚拟环境是很有必要的。通常实验室里一个服务器是大家公用的，为了不引起包冲突，创建一个虚拟环境是很有必要的。\nMethod1\n步骤如下：\n我将用conda来创建\n\n\n检查是否安装conda以及当前conda版本\n1conda -V\n\n\n查看当前已创建的虚拟环境有哪些\n1conda env list\n或\n1conda info -e\n\n\n创建一个名为 env1 且python解析器为2.7版本的虚拟环境\n1conda create -n env1 python=2.7\n由此，虚拟环境可在Anaconda安装目录envs文件夹下找到。\n\n\n使用\n\n\n使用激活\n1source activate env1\n\n\n给env1安装额外的包\n1conda install -n env1 [package]\n即可安装package到新创建的env1中。\n\n\n关闭环境\n1source deactivate\n\n\n移除虚拟环境\n\n\n移除env1环境中的某个包\n1conda remove --name $env1 $package_name\n\n\n移除某个虚拟环境\n1conda remove -n env1 --all\n\n\n\n\nMethod2\n1 Create a virtual environment\npython3 -m venv env_name\nor\nvirtualenv env_name\nif env_name is not exist, there will be a dir  created.\n2 Activate ur virtual environment\nif Windows:\nenv_name\\Scripts\\activate.bat\nif Unix or MacOS:\nsource env_name/bin/activate\n3 exit environment\ndeactivate\n","plink":"http://thswind.github.io/2019/10/08/Linux+python+virtual environment/"},{"title":"hexo's usage","date":"2019-10-08T03:07:20.000Z","date_formatted":{"ll":"Oct 8, 2019","L":"10/08/2019","MM-DD":"10-08"},"updated":"2019-10-08T03:07:20.000Z","content":"准备\n\ncmd-&gt;cd 到网站所在目录\n或者直接在网站所在目录打开cmd\n利用sublime打开网站目录，以便对其进行编辑与管理\n\n创建文章\n1hexo new &quot;hexo使用&quot;\n\n\n输入此命令后，在source/_post文件夹下会自动创建一个文件，名为：hexo使用.md\n\n\n然后我们在sublime中网站根目录下依次打开 source/_posts/hexo使用.md  可对其进行编辑，或 利用其他markdown工具编写好后，复制到该目录下。\n\n\n其默认有三种布局，分别是：\n\n\n布局\n路径\n\n\n\n\npost\nsource/_posts\n\n\npage\nsource\n\n\ndraft\nsource/_drafts\n\n\n部署发布\n输入：\n1hexo g -d\n博文中插入图片\n\n\n把主页配置文件_config.yml（不是主题中的 _config.yml）中的post_asset_folder: 这个设置为true\n\n\n在你的hexo目录下执行\n\n\n  1npm install hexo-asset-image --save\n就安装了一个可以上传本地图片的插件。\n\n此后再运行 hexo n “文章名” 生成博文时，/source/_posts文件夹内除了xxxx.md文件还有一个同名的文件夹（也可以自己手动建）\n最后，按照markdown的格式引入图片到想要插入的博文md文件中即可。\n\n未完待续…\n","plink":"http://thswind.github.io/2019/10/08/hexo usage/"},{"title":"Partition table error","date":"2019-09-28T08:20:25.000Z","date_formatted":{"ll":"Sep 28, 2019","L":"09/28/2019","MM-DD":"09-28"},"updated":"2019-09-28T08:20:25.000Z","content":"描述：当电脑打开，呈现分区表相关的错误时，或者一直黑屏。\n操作：可尝试利用分区工具为电脑重建主引导，经测试，电脑皆恢复正常。\n","plink":"http://thswind.github.io/2019/09/28/Partition table error/"},{"title":"Resume","date":"2020-10-07T01:15:50.000Z","date_formatted":{"ll":"Oct 7, 2020","L":"10/07/2020","MM-DD":"10-07"},"updated":"2020-10-07T01:15:50.000Z","content":"  If you have any questions, please feel free to contact me through email:\nrpchou@163.com\nrevan.ruipengzhou@gmail.com\ngs.rpzhou18@gzu.edu.cn\n\n","plink":"http://thswind.github.io/about/"},{"title":"","date":"2022-08-26T15:51:43.052Z","date_formatted":{"ll":"Aug 26, 2022","L":"08/26/2022","MM-DD":"08-26"},"updated":"2022-08-26T15:51:43.052Z","content":"\n\n\n","plink":"http://thswind.github.io/snippets/flag/"}]