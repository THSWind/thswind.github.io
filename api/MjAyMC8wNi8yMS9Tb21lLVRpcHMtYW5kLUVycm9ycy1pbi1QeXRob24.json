{"title":"Some Tips and Errors in Python","date":"2020-06-21T14:55:50.000Z","date_formatted":{"ll":"Jun 21, 2020","L":"06/21/2020","MM-DD":"06-21"},"link":"2020/06/21/Some-Tips-and-Errors-in-Python","comments":true,"tags":["Python"],"updated":"2020-06-21T14:55:50.000Z","content":"<p>When you want to remove something from a list, perhaps iterating it is your first choice. But there are some trouble about it.</p>\n<!--block-->\n<h1 id=\"1-error-while-iterating-a-list\">1 Error While iterating a list<a title=\"#1-error-while-iterating-a-list\" href=\"#1-error-while-iterating-a-list\"></a></h1>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#Example</span></span><br><span class=\"line\">a=[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> a:</span><br><span class=\"line\">    a.remove(i)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(a)</span><br></pre></td></tr></table></figure>\n<p>it’s result is:</p>\n<p>[2, 4]</p>\n<p>surprise？ that‘s because when you remove the first element of a, a’s length has changed. All of elements after the first one will move forward.</p>\n<p>Solution：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a=[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>]</span><br><span class=\"line\">t=<span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">while</span>(t&lt;<span class=\"built_in\">len</span>(a)):</span><br><span class=\"line\">    a.pop(t)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(a)</span><br></pre></td></tr></table></figure>\n<p>it’s result is:</p>\n<p>[]</p>\n<p>done!</p>\n<h1 id=\"2-permutation-and-combination-in-python\">2 Permutation and combination in Python<a title=\"#2-permutation-and-combination-in-python\" href=\"#2-permutation-and-combination-in-python\"></a></h1>\n<p>Sometimes we need to use exhaustion, especially in permutation and combination problems. We can do like this:</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#Example</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> itertools</span><br><span class=\"line\">string = <span class=\"built_in\">input</span>(<span class=\"string\">&quot;please input a string:&quot;</span>)</span><br><span class=\"line\">lst=[]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>, <span class=\"built_in\">len</span>(string)+<span class=\"number\">1</span>):</span><br><span class=\"line\">    lst1 = [<span class=\"string\">&#x27;&#x27;</span>.join(x) <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> itertools.permutations(string, i)]</span><br><span class=\"line\">    lst+=lst1</span><br><span class=\"line\"><span class=\"built_in\">print</span>(lst)   </span><br></pre></td></tr></table></figure>\n<h1 id=\"3-how-to-use-setup.py-file-in-github\">3 How to Use <a href=\"http://setup.py\">setup.py</a> file in Github<a title=\"#3-how-to-use-setup.py-file-in-github\" href=\"#3-how-to-use-setup.py-file-in-github\"></a></h1>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python setup.py install</span><br><span class=\"line\">python setup.py build</span><br></pre></td></tr></table></figure>\n<h1 id=\"4-transform-elements-from-a-list-to-keys-of-dict\">4 Transform elements from a list to keys of dict<a title=\"#4-transform-elements-from-a-list-to-keys-of-dict\" href=\"#4-transform-elements-from-a-list-to-keys-of-dict\"></a></h1>\n<p>dict.fromkeys(seq[, value])</p>\n<p>seq  is the name of your list.</p>\n<p>value is the elements of list.</p>\n<p>This is used to create a new dict variable.</p>\n<h2 id=\"usage-1:-not-specify-value\">Usage 1: Not specify value<a title=\"#usage-1:-not-specify-value\" href=\"#usage-1:-not-specify-value\"></a></h2>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">x =(<span class=\"string\">&#x27;key1&#x27;</span>, <span class=\"string\">&#x27;key2&#x27;</span>, <span class=\"string\">&#x27;key3&#x27;</span>)</span><br><span class=\"line\">thisdict = <span class=\"built_in\">dict</span>.fromkeys(x)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(thisdict)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#result</span></span><br><span class=\"line\">&#123;<span class=\"string\">&#x27;key1&#x27;</span>:<span class=\"literal\">None</span>,<span class=\"string\">&#x27;key2&#x27;</span>:<span class=\"literal\">None</span>,<span class=\"string\">&#x27;key3&#x27;</span>:<span class=\"literal\">None</span>&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"usage-2:-specify-value\">Usage 2: Specify value<a title=\"#usage-2:-specify-value\" href=\"#usage-2:-specify-value\"></a></h2>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">seq = (<span class=\"string\">&#x27;name&#x27;</span>, <span class=\"string\">&#x27;age&#x27;</span>, <span class=\"string\">&#x27;sex&#x27;</span>)</span><br><span class=\"line\"><span class=\"built_in\">dict</span> = <span class=\"built_in\">dict</span>.fromkeys(seq, <span class=\"number\">10</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span> (<span class=\"string\">&quot;the new dict is: %s&quot;</span> %  <span class=\"built_in\">str</span>(<span class=\"built_in\">dict</span>)).</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#result</span></span><br><span class=\"line\">the new <span class=\"built_in\">dict</span> <span class=\"keyword\">is</span>: &#123;<span class=\"string\">&#x27;age&#x27;</span>: <span class=\"number\">10</span>, <span class=\"string\">&#x27;name&#x27;</span>: <span class=\"number\">10</span>, <span class=\"string\">&#x27;sex&#x27;</span>: <span class=\"number\">10</span>&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"tips-(duplicate-removal)\">Tips (Duplicate Removal)<a title=\"#tips-(duplicate-removal)\" href=\"#tips-(duplicate-removal)\"></a></h2>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">4</span>, <span class=\"number\">2</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>, <span class=\"number\">5</span>, <span class=\"number\">7</span>, <span class=\"number\">8</span>, <span class=\"number\">9</span>, <span class=\"number\">0</span>]</span><br><span class=\"line\">b = &#123;&#125;</span><br><span class=\"line\">b = b.fromkeys(a)</span><br><span class=\"line\">c = <span class=\"built_in\">list</span>(b.keys())</span><br></pre></td></tr></table></figure>\n<h1 id=\"5-transform-a-image-to-grayscale\">5 Transform a Image to Grayscale<a title=\"#5-transform-a-image-to-grayscale\" href=\"#5-transform-a-image-to-grayscale\"></a></h1>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#Example</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> cv2</span><br><span class=\"line\">image = cv2.imread(<span class=\"string\">&#x27;C:/Users/N/Desktop/Test.jpg&#x27;</span>)   <span class=\"comment\">#(210,160,3)</span></span><br><span class=\"line\">gray = cv2.cvtColor(image,cv2.COLOR_BGR2GRAY)</span><br><span class=\"line\">cv2.imshow(<span class=\"string\">&#x27;Gray image&#x27;</span>,gray)  <span class=\"comment\">#(210,160)</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"6-use-of-enums-in-python\">6 Use of Enums in Python<a title=\"#6-use-of-enums-in-python\" href=\"#6-use-of-enums-in-python\"></a></h1>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#Example</span></span><br><span class=\"line\">Class Lab:</span><br><span class=\"line\">    Jane, Bob, Thswind = <span class=\"built_in\">range</span>(<span class=\"number\">3</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(Lab.Jane)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(Lab.Bob)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(Lab.Thswind)</span><br></pre></td></tr></table></figure>\n<h1 id=\"7-use-the-interactive-&quot;_&quot;-operator\">7 Use the Interactive “_” Operator<a title=\"#7-use-the-interactive-&quot;_&quot;-operator\" href=\"#7-use-the-interactive-&quot;_&quot;-operator\"></a></h1>\n<p>In the python console, whenever we test an expression or call a function, the result dispatches to a temporary name, _ (an underscore).</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#example</span></span><br><span class=\"line\">&gt;&gt;&gt;<span class=\"number\">2</span>+<span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"number\">3</span></span><br><span class=\"line\">&gt;&gt;&gt;_</span><br><span class=\"line\"><span class=\"number\">3</span></span><br><span class=\"line\">&gt;&gt;&gt;<span class=\"built_in\">print</span> _</span><br><span class=\"line\"><span class=\"number\">3</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"8-print-all-of-list-without-omit\">8 Print all of List without Omit<a title=\"#8-print-all-of-list-without-omit\" href=\"#8-print-all-of-list-without-omit\"></a></h1>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#Example</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\">np.set_printoptions(threshold=np.inf)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;done&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<h1 id=\"9-use-range()-to-generate-a-series-of-reversed-number\">9 Use range() to generate a series of reversed number<a title=\"#9-use-range()-to-generate-a-series-of-reversed-number\" href=\"#9-use-range()-to-generate-a-series-of-reversed-number\"></a></h1>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#Example</span></span><br><span class=\"line\">list_name = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(list_name), -<span class=\"number\">1</span>, -<span class=\"number\">1</span>):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(i)</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"comment\">#Result</span></span><br><span class=\"line\"><span class=\"number\">4</span></span><br><span class=\"line\"><span class=\"number\">3</span></span><br><span class=\"line\"><span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"number\">0</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"10-ternary-operator\">10 ternary operator<a title=\"#10-ternary-operator\" href=\"#10-ternary-operator\"></a></h2>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a, b = <span class=\"number\">1</span>, <span class=\"number\">2</span></span><br><span class=\"line\">maxi = a &gt; b <span class=\"keyword\">and</span> a <span class=\"keyword\">or</span> b</span><br></pre></td></tr></table></figure>\n<h2 id=\"11-make-a-slice-on-a-deque\">11 Make a slice on a deque<a title=\"#11-make-a-slice-on-a-deque\" href=\"#11-make-a-slice-on-a-deque\"></a></h2>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> itertools</span><br><span class=\"line\">q = deque()</span><br><span class=\"line\"><span class=\"comment\"># append.()   1,2,3,4,5,6</span></span><br><span class=\"line\">supq = itertools.islice(q, start, end)</span><br></pre></td></tr></table></figure>\n<h2 id=\"12-importerror:-cannot-import-name-'_validate_lengths'\">12 ImportError: cannot import name ‘_validate_lengths’<a title=\"#12-importerror:-cannot-import-name-'_validate_lengths'\" href=\"#12-importerror:-cannot-import-name-'_validate_lengths'\"></a></h2>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install numpy==<span class=\"number\">1.14</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"13-to-see-software's-version\">13 To See Software’s Version<a title=\"#13-to-see-software's-version\" href=\"#13-to-see-software's-version\"></a></h2>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip list | grep tensorflow</span><br><span class=\"line\"><span class=\"comment\"># or</span></span><br><span class=\"line\">apt list | grep cudnn</span><br><span class=\"line\"><span class=\"comment\"># or</span></span><br><span class=\"line\">conda list | grep tensorflow</span><br></pre></td></tr></table></figure>\n","prev":{"title":"Trap in Roulette Selection","link":"2020/07/01/Trap-in-Roulette-Selection-Algorithm"},"next":{"title":"Operating csv files in Python","link":"2020/06/21/Operating-csv-files-in-Python"},"plink":"http://thswind.github.io/2020/06/21/Some-Tips-and-Errors-in-Python/","toc":[{"id":"1-error-while-iterating-a-list","title":"1 Error While iterating a list","index":"1"},{"id":"2-permutation-and-combination-in-python","title":"2 Permutation and combination in Python","index":"2"},{"id":"3-how-to-use-setup.py-file-in-github","title":"3 How to Use setup.py file in Github","index":"3"},{"id":"4-transform-elements-from-a-list-to-keys-of-dict","title":"4 Transform elements from a list to keys of dict","index":"4","children":[{"id":"usage-1:-not-specify-value","title":"Usage 1: Not specify value","index":"4.1"},{"id":"usage-2:-specify-value","title":"Usage 2: Specify value","index":"4.2"},{"id":"tips-(duplicate-removal)","title":"Tips (Duplicate Removal)","index":"4.3"}]},{"id":"5-transform-a-image-to-grayscale","title":"5 Transform a Image to Grayscale","index":"5"},{"id":"6-use-of-enums-in-python","title":"6 Use of Enums in Python","index":"6"},{"id":"7-use-the-interactive-\"_\"-operator","title":"7 Use the Interactive “_” Operator","index":"7"},{"id":"8-print-all-of-list-without-omit","title":"8 Print all of List without Omit","index":"8"},{"id":"9-use-range()-to-generate-a-series-of-reversed-number","title":"9 Use range() to generate a series of reversed number","index":"9","children":[{"id":"10-ternary-operator","title":"10 ternary operator","index":"9.1"},{"id":"11-make-a-slice-on-a-deque","title":"11 Make a slice on a deque","index":"9.2"},{"id":"12-importerror:-cannot-import-name-'_validate_lengths'","title":"12 ImportError: cannot import name ‘_validate_lengths’","index":"9.3"},{"id":"13-to-see-software's-version","title":"13 To See Software’s Version","index":"9.4"}]}],"reading_time":"584 words in 4 min"}