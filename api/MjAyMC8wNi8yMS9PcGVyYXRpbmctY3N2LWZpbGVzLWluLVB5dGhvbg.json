{"title":"Operating csv files in Python","date":"2020-06-21T14:54:23.000Z","date_formatted":{"ll":"Jun 21, 2020","L":"06/21/2020","MM-DD":"06-21"},"link":"2020/06/21/Operating-csv-files-in-Python","tags":["Python"],"updated":"2020-06-21T14:54:23.000Z","content":"<p>Usually, I use a csv file to save some experimental data. Here are some common operation codes.</p>\n<!-- block-->\n<p>I will import a package named ‘csv’. It provides some methods to operating csv file.</p>\n<h1 id=\"1-reading-csv-file-in-python\">1 Reading csv file in Python<a title=\"#1-reading-csv-file-in-python\" href=\"#1-reading-csv-file-in-python\"></a></h1>\n<h2 id=\"1.1-line-by-line\">1.1 Line by line<a title=\"#1.1-line-by-line\" href=\"#1.1-line-by-line\"></a></h2>\n<p>we will use <em>‘csv.reader()’</em> method, it’s return is a object named ‘_csv.reader’. We can iterate it.</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Example</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> csv</span><br><span class=\"line\"><span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(<span class=\"string\">&#x27;progress.csv&#x27;</span>, <span class=\"string\">&#x27;r&#x27;</span>)  <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">​    reader = csv.reader(f)</span><br><span class=\"line\">​    <span class=\"keyword\">for</span> row <span class=\"keyword\">in</span> reader:</span><br><span class=\"line\">​       <span class=\"built_in\">print</span>(row)</span><br></pre></td></tr></table></figure>\n<h2 id=\"1.2-get-a-line\">1.2 Get a line<a title=\"#1.2-get-a-line\" href=\"#1.2-get-a-line\"></a></h2>\n<p>If you want to get a line from it, you can make a type change on reader. you can use list function to transform the ‘reader’ to a list object, then you can get a line by index.</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Example</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> csv</span><br><span class=\"line\"><span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(<span class=\"string\">&#x27;progress.csv&#x27;</span>,<span class=\"string\">&#x27;r&#x27;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">    reader = csv.reader(f)</span><br><span class=\"line\">    res = <span class=\"built_in\">list</span>(reader)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(res[<span class=\"number\">1</span>]) <span class=\"comment\">#get second line</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"1.3-get-a-column\">1.3 Get a column<a title=\"#1.3-get-a-column\" href=\"#1.3-get-a-column\"></a></h2>\n<p>If you want to get a column from a csv file, you can refer to case <em>‘Line by line’</em> , just to add a index.</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#Example</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> csv</span><br><span class=\"line\"><span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(<span class=\"string\">&#x27;progress.csv&#x27;</span>,<span class=\"string\">&#x27;r&#x27;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">    reader = csv.reader(f)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> reader:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(i[<span class=\"number\">0</span>])   <span class=\"comment\">#get first column</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"2-writing-csv-file-in-python\">2 Writing csv file in Python<a title=\"#2-writing-csv-file-in-python\" href=\"#2-writing-csv-file-in-python\"></a></h1>\n<h2 id=\"2.1-line-by-line\">2.1 Line by line<a title=\"#2.1-line-by-line\" href=\"#2.1-line-by-line\"></a></h2>\n<p>Analogously, I need a method, this time it’s name is ‘<em>csv.writer()</em>’.</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#Example</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> csv</span><br><span class=\"line\"><span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(<span class=\"string\">&#x27;progress.csv&#x27;</span>, <span class=\"string\">&#x27;w&#x27;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">    writer = writer(f)</span><br><span class=\"line\">    writer.writerow([<span class=\"string\">&#x27;first&#x27;</span>,<span class=\"string\">&#x27;second&#x27;</span>,<span class=\"string\">&#x27;third&#x27;</span>,<span class=\"string\">&#x27;fourth&#x27;</span>])</span><br></pre></td></tr></table></figure>\n<p>Attention:</p>\n<p>If you need open the same file twice, you need to pay attention to authority while you open this file. you must use ‘a+’, like this:</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#Example</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> csv</span><br><span class=\"line\"><span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(<span class=\"string\">&#x27;progress.csv&#x27;</span>, <span class=\"string\">&#x27;a+&#x27;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">    writer = csv.writer(f)</span><br><span class=\"line\">    writer.writerow([<span class=\"string\">&#x27;1&#x27;</span>,<span class=\"string\">&#x27;2&#x27;</span>,<span class=\"string\">&#x27;3&#x27;</span>,<span class=\"string\">&#x27;4&#x27;</span>])</span><br></pre></td></tr></table></figure>\n<p>Only if you in this way to write it, your previously written content will not be overwritten.</p>\n<h1 id=\"3-use-date-as-file-name\">3 Use date as file name<a title=\"#3-use-date-as-file-name\" href=\"#3-use-date-as-file-name\"></a></h1>\n<p>Sometimes, you want to name a file to distinguish it from other files. You can make use of <em>‘datetime()’</em> package.</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#Example</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> datetime <span class=\"keyword\">import</span> datetime</span><br><span class=\"line\">filename = datetime.now().strftime(<span class=\"string\">&#x27;progress-%Y%M%D%H%M.csv&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">with</span> <span class=\"built_in\">open</span> (filename, <span class=\"string\">&#x27;w+&#x27;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">    writer = csv.writer(f)</span><br><span class=\"line\">    writer.writerow([<span class=\"string\">&#x27;first&#x27;</span>,<span class=\"string\">&#x27;second&#x27;</span>,<span class=\"string\">&#x27;third&#x27;</span>])</span><br></pre></td></tr></table></figure>\n<p>ps: ‘w+’ means you can write and read file.</p>\n<h1 id=\"error\">Error<a title=\"#error\" href=\"#error\"></a></h1>\n<p>If your file path write as “./data/filename”. At the same time, the ‘data’ folder isn’t exist.</p>\n<p>An error will occur, that’s because python just create current file or folder, it can’t create a parent folder. You can create a parent folder by yourself.</p>\n","prev":{"title":"Some Tips and Errors in Python","link":"2020/06/21/Some-Tips-and-Errors-in-Python"},"next":{"title":"Dual system(Win10+Ubuntu20.04)","link":"2020/06/12/Dual-system-Win10-Ubuntu20-04"},"plink":"http://thswind.github.io/2020/06/21/Operating-csv-files-in-Python/","toc":[{"id":"1-reading-csv-file-in-python","title":"1 Reading csv file in Python","index":"1","children":[{"id":"1.1-line-by-line","title":"1.1 Line by line","index":"1.1"},{"id":"1.2-get-a-line","title":"1.2 Get a line","index":"1.2"},{"id":"1.3-get-a-column","title":"1.3 Get a column","index":"1.3"}]},{"id":"2-writing-csv-file-in-python","title":"2 Writing csv file in Python","index":"2","children":[{"id":"2.1-line-by-line","title":"2.1 Line by line","index":"2.1"}]},{"id":"3-use-date-as-file-name","title":"3 Use date as file name","index":"3"},{"id":"error","title":"Error","index":"4"}],"reading_time":"456 words in 3 min"}